name: EarlyAccess

on:
  push:
    branches: [ main ]

permissions:
  actions: write
  id-token: write
  contents: write

jobs:
  precheck:
    name: Precheck
    uses: jreleaser/jreleaser/.github/workflows/step-precheck.yml@main
    secrets: inherit

  jlink:
    name: Jlink
    needs: [precheck]
    if: endsWith(${{ needs.precheck.outputs.version }}, '-SNAPSHOT')
    uses: jreleaser/jreleaser/.github/workflows/step-jlink.yml@main
    with:
      project-version: ${{ needs.precheck.outputs.version }}
    secrets:
      gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}
      oci-compartment-id: ${{ secrets.JRELEASER_OCI_COMPARTMENTID }}

  jpackage:
    name: JPackage
    needs: [precheck, jlink]
    uses: jreleaser/jreleaser/.github/workflows/step-jpackage.yml@main
    with:
      project-version: ${{ needs.precheck.outputs.version }}
      project-effective-version: early-access

  native-image:
    name: Native Image
    needs: [precheck, jlink]
    uses: jreleaser/jreleaser/.github/workflows/step-native-image.yml@main
    with:
      project-version: ${{ needs.precheck.outputs.version }}
    secrets:
      gh-access-token: ${{ secrets.GIT_ACCESS_TOKEN }}

  release:
    name: Release
    needs: [precheck, jlink, jpackage, native-image]
    runs-on: ubuntu-latest
    outputs:
      hashes: ${{ steps.slsa.outputs.HASHES }}
      tagname: ${{ steps.slsa.outputs.TAGNAME }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: artifacts
          path: plugins

      - name: Download java-archive
        uses: actions/download-artifact@v4
        with:
          name: java-archive
          path: out/jreleaser/assemble/jreleaser/java-archive

      - name: Download jlink
        uses: actions/download-artifact@v4
        with:
          name: jlink
          path: out/jreleaser/assemble/jreleaser-standalone/jlink

      - name: Download jpackage
        uses: actions/download-artifact@v4
        with:
          pattern: jpackage-*
          merge-multiple: true
          path: out/jreleaser/assemble/jreleaser-installer/jpackage

      - name: Download native-image
        uses: actions/download-artifact@v4
        with:
          pattern: native-image-*
          merge-multiple: true
          path: out/jreleaser/assemble/jreleaser-native/native-image

      - name: Release
        uses: jreleaser/release-action@v2
        with:
          version: early-access
          arguments: full-release
        env:
          JRELEASER_PROJECT_VERSION: ${{ needs.precheck.outputs.version }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GIT_ACCESS_TOKEN }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.GPG_SECRET_KEY }}
          JRELEASER_DOCKER_DEFAULT_PASSWORD: ${{ secrets.JRELEASER_DOCKER_PASSWORD }}

      - name: JReleaser release output
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jreleaser-release
          path: |
            out/jreleaser/trace.log
            out/jreleaser/output.properties

      - name: SLSA
        shell: bash
        id: slsa
        run: |
          echo "HASHES=$(cat out/jreleaser/checksums/checksums_sha256.txt | base64 -w0)" >> "$GITHUB_OUTPUT"
          echo "TAGNAME=$(grep tagName out/jreleaser/output.properties | awk -F'=' '{print $2}')" >> "$GITHUB_OUTPUT"

  provenance:
    name: Provenance
    needs: [precheck, release]
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.0.0
    with:
      base64-subjects: ${{ needs.release.outputs.hashes }}
      upload-assets: true
      upload-tag-name: ${{ needs.release.outputs.tagname }}
      provenance-name: jreleaser-all-${{ needs.release.outputs.tagname }}.intoto.jsonl

  update-wiki:
    name: Update Wiki
    needs: [precheck, release]
    uses: jreleaser/jreleaser/.github/workflows/step-update-wiki.yml@main
    with:
      project-version: ${{ needs.precheck.outputs.version }}
      project-tag: ${{ needs.release.outputs.tagname }}
    secrets:
      gh-access-token: ${{ secrets.GIT_ACCESS_TOKEN }}

  update-bach-info:
    name: Update Bach Info
    needs: [precheck, release]
    uses: jreleaser/jreleaser/.github/workflows/step-update-bach-info.yml@main
    with:
      project-version: ${{ needs.precheck.outputs.version }}
      project-tag: ${{ needs.release.outputs.tagname }}
    secrets:
      gh-access-token: ${{ secrets.GIT_ACCESS_TOKEN }}
