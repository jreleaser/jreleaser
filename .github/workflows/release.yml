name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true

env:
  JAVA_VERSION: '11'
  JAVA_DISTRO: 'zulu'
  GRAAL_VERSION: '22.3.0'
  GRAAL_JAVA_VERSION: '17'

jobs:
  precheck:
    name: Precheck
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.vars.outputs.VERSION }}
      JAVA_VERSION: ${{ env.JAVA_VERSION }}
      JAVA_DISTRO: ${{ env.JAVA_DISTRO }}
      GRAAL_VERSION: ${{ env.GRAAL_VERSION }}
      GRAAL_JAVA_VERSION: ${{ env.GRAAL_JAVA_VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: n1hility/cancel-previous-runs@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Version
        id: vars
        shell: bash
        run: |
          echo "VERSION=${{ github.event.inputs.version }}" >>$GITHUB_OUTPUT

  jlink:
    needs: [precheck]
    uses: jreleaser/jreleaser/.github/workflows/step-jlink.yml@main
    with:
      java-version: ${{ needs.precheck.outputs.JAVA_VERSION }}
      java-distro: ${{ needs.precheck.outputs.JAVA_DISTRO }}
      project-version: ${{ needs.precheck.outputs.VERSION }}

  jpackage:
    needs: [precheck, jlink]
    uses: jreleaser/jreleaser/.github/workflows/step-jpackage.yml@main
    with:
      java-version: ${{ needs.precheck.outputs.JAVA_VERSION }}
      java-distro: ${{ needs.precheck.outputs.JAVA_DISTRO }}
      project-version: ${{ needs.precheck.outputs.VERSION }}

  native-image:
    needs: [precheck, jlink]
    uses: jreleaser/jreleaser/.github/workflows/step-native-image.yml@main
    with:
      graal-version: ${{ needs.precheck.outputs.GRAAL_VERSION }}
      graal-java-version: ${{ needs.precheck.outputs.GRAAL_JAVA_VERSION }}
      java-version: ${{ needs.precheck.outputs.JAVA_VERSION }}
      java-distro: ${{ needs.precheck.outputs.JAVA_DISTRO }}
      project-version: ${{ needs.precheck.outputs.VERSION }}

  release:
    name: Release
    needs: [precheck, jlink, jpackage, native-image]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts
          path: plugins

      - name: Download jlink
        uses: actions/download-artifact@v3
        with:
          name: jlink
          path: out/jreleaser/assemble/jreleaser-standalone/jlink

      - name: Download jpackage
        uses: actions/download-artifact@v3
        with:
          name: jpackage
          path: out/jreleaser/assemble/jreleaser-installer/jpackage

      - name: Download native-image
        uses: actions/download-artifact@v3
        with:
          name: native-image
          path: out/jreleaser/assemble/jreleaser-native/native-image

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRO }}

      - uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}-${{ hashFiles('**/gradle.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - uses: actions/cache@v3
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradlew-${{ hashFiles('**/gradlew') }}
          restore-keys: |
            ${{ runner.os }}-gradlew-

      - name: Version
        run: |
          echo ${{ needs.precheck.outputs.VERSION }} > VERSION

      - name: Deploy
        env:
          GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
          GPG_SECRET_KEY: ${{ secrets.GPG_SECRET_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          GRADLE_PUBLISH_KEY: ${{ secrets.GRADLE_PUBLISH_KEY }}
          GRADLE_PUBLISH_SECRET: ${{ secrets.GRADLE_PUBLISH_SECRET }}
        run: |
          ./gradlew -Prelease=true -Pfull-release=true \
          -PsonatypeUsername=${{ secrets.SONATYPE_USERNAME }} \
          -PsonatypePassword=${{ secrets.SONATYPE_PASSWORD }} \
          build publishToSonatype publishPlugins -S

      - name: Commit version
        run: |
          git add VERSION
          sed -i -e "s/^\:project-version\:\ .*/:project-version: ${{ needs.precheck.outputs.VERSION }}/g" README.adoc
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Action"
          git commit -a -m "Releasing version ${{ needs.precheck.outputs.VERSION }}"
          git push origin main

      - name: Release
        uses: jreleaser/release-action@v2
        with:
          version: early-access
          arguments: full-release
        env:
          JRELEASER_PROJECT_VERSION: ${{ needs.precheck.outputs.VERSION }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GIT_ACCESS_TOKEN }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.GPG_SECRET_KEY }}
          JRELEASER_DOCKER_DEFAULT_PASSWORD: ${{ secrets.JRELEASER_DOCKER_PASSWORD }}
          JRELEASER_SDKMAN_CONSUMER_KEY: ${{ secrets.SDKMAN_CONSUMER_KEY }}
          JRELEASER_SDKMAN_CONSUMER_TOKEN: ${{ secrets.SDKMAN_CONSUMER_TOKEN }}
          JRELEASER_TWITTER_CONSUMER_KEY: ${{ secrets.TWITTER_CONSUMER_KEY }}
          JRELEASER_TWITTER_CONSUMER_SECRET: ${{ secrets.TWITTER_CONSUMER_SECRET }}
          JRELEASER_TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          JRELEASER_TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
          JRELEASER_HTTP_NOTICEABLE_PASSWORD: ${{ secrets.NOTICEABLE_APIKEY }}
          NOTICEABLE_AUTHOR_EMAIL: ${{ secrets.NOTICEABLE_AUTHOR_EMAIL }}
          NOTICEABLE_PROJECTID: ${{ secrets.NOTICEABLE_PROJECTID }}

      - name: JReleaser release output
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: jreleaser-release
          path: |
            out/jreleaser/trace.log
            out/jreleaser/output.properties

  update:
    name: Update
    needs: [precheck, release]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: jreleaser/jreleaser.github.io
          ref: 'main'
          token: ${{ secrets.GIT_ACCESS_TOKEN }}

      - name: Commit
        run: |
          git merge development
          sed -i -e "s/^\version\:\ early-access.*/version: latest/g" docs/antora.yml
          sed -i -e "s/jreleaser-version\:\ .*/jreleaser-version: ${{ needs.precheck.outputs.VERSION }}/g" docs/antora.yml
          VERSION=${{ needs.precheck.outputs.VERSION }}
          echo ${{ needs.precheck.outputs.VERSION }} > VERSION
          git add VERSION
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Action"
          git commit -a -m "Releasing version ${{ needs.precheck.outputs.VERSION }}"
          git push origin main