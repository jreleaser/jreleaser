name: NativeImage

on:
  workflow_call:
    inputs:
      project-version:
        required: true
        type: string
      java-version:
        default: '11'
        required: false
        type: string
      java-distro:
        default: 'zulu'
        required: false
        type: string
      graal-version:
        default: '22.3.0'
        required: false
        type: string
      graal-java-version:
        default: '17'
        required: false
        type: string

jobs:
  native-image:
    name: 'NativeImage on ${{ matrix.os }}'
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts
          path: plugins

      - name: Download jlink
        uses: actions/download-artifact@v3
        with:
          name: jlink
          path: out/jreleaser/assemble/jreleaser-standalone/jlink

      - name: Set up Graal
        uses: graalvm/setup-graalvm@v1
        with:
          version: ${{ inputs.graal-version }}
          java-version: ${{ inputs.graal-java-version }}
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{ inputs.java-version }}
          distribution: ${{ inputs.java-distro }}

      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}-${{ hashFiles('**/gradle.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradlew-${{ hashFiles('**/gradlew') }}
          restore-keys: |
            ${{ runner.os }}-gradlew-

      - name: Version
        if: endsWith(${{ inputs.project-version }}, '-SNAPSHOT') != true
        run: |
          echo ${{ inputs.project-version }} > VERSION

      - name: Build
        run: ./gradlew :jreleaser:copyJdksFromCache :jreleaser:setupJdks

      - name: Install upx
        run: brew install upx
        if: ${{ runner.os == 'macOS' }}

      - name: NativeImage
        uses: jreleaser/release-action@v1
        with:
          version: early-access
          arguments: assemble -s native-image -scp
        env:
          JRELEASER_PROJECT_VERSION: ${{ inputs.project-version }}

      - name: JReleaser output
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: jreleaser-native-image-${{ runner.os }}
          path: |
            out/jreleaser/trace.log
            out/jreleaser/output.properties

      - name: Upload native-image
        uses: actions/upload-artifact@v3
        with:
          retention-days: 1
          name: native-image
          path: |
            out/jreleaser/assemble/jreleaser-native/native-image/*.zip