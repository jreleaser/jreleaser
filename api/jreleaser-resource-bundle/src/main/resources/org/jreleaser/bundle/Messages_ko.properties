#
# SPDX-License-Identifier: Apache-2.0
#
# Copyright 2020-2024 The JReleaser authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

###############################################################################
# TRANSLATIONS NOTES:
# - please respect the capitalization of the first word
# - DSL property names must remain as is, e.g, 'basedir'
# - do not translate 'false', 'true'
###############################################################################

yes = 예
no  = 아니오
not = 아닌

ERROR_unexpected_error = 예기치 않은 오류
ERROR_unsupported_platform_override = '{}'는 지원하지 않는 플랫폼, 대신 '{}'를 사용하십시오
ERROR_context_creator_parse_configuration         = {}에서 설정을 파싱할때, 예기치 않은 오류가 발생했습니다
context.creator.reading_configuration             = 설정 읽기
context.creator.report.project-version            = 프로젝트 버전을 {}로 설정
context.creator.report.release                    = 릴리스는 {} 스냅샷입니다.
context.creator.report.timestamp                  = 타임스탬프는 {} 입니다
context.creator.report.head                       = HEAD는 {}에 있습니다.
context.creator.report.platform                   = 플랫폼은 {} 입니다.
context.configurer.auto-config.on                 = 자동 설정이 활성화됨
# do not translate basedir
context.configurer.basedir.set                    = - basedir 을 {}로 설정
ERROR_context_configurer_unsupported_url          = {}은 자동 설정을 지원하지 않음.
# do not translate release.updateSections, release.update
ERROR_context_configurer_update_not_set           = release.updateSections 은 설정되었지만, release.update 은 false입니다.
ERROR_context_configurer_fail_git_head            = git HEAD를 확인할 수 없습니다.
ERROR_context_configurer_fail_git_remote          = remote를 확인할 수 없습니다.
ERROR_context_configurer_jreleaser_misconfigured  = JReleaser 가 올바르게 설정되지 않았습니다.
ERROR_context_configurer_detected_git             = 자동 설정이 {}를 감지했지만 프로젝트에 {}가 구성되었습니다.
ERROR_version_parse                               = 버전 '{}'을 파싱할 수 없습니다.
ERROR_version_parse_with                          = 버전 '{}'을 '{}'로 파싱할 수 없습니다.
ERROR_unsupported_algorithm                       = 지왼되지 않는 알고리즘 {}
ERROR_calver_year                                 = 포맷이 YYYY/YY/0Y 로 시작하지 않음 토큰: '{}'
ERROR_calver_month                                = 포맷이 MM/0M을 정의하므로 WW/0W를 가질 수 없습니다. 토큰: '{}'
ERROR_calver_week_month                           = 포맷이 WW/0W을 정의하므로 MM/0M를 가질 수 없습니다. 토큰: '{}'
ERROR_calver_week_day                             = 포맷이 WW/0W을 정의하므로 DD/0D를 가질 수 없습니다. 토큰: '{}'
ERROR_calver_micro_duplicate                      = 포맷이 두 MICRO를 정의합니다. tokens: '{}'
ERROR_calver_minor_duplicate                      = 포맷이 두 MINOR를 정의합니다.  tokens: '{}'
ERROR_calver_micro_minor                          = 포맷이 MICRO 뒤에 MINOR 토큰을 정의합니다. '{}'

announcers.header                = Announcing release
announcers.not.enabled           = Announcing이 활성화되어 있지 않습니다. 건너뜀
announcers.not.configured        = 설정된 announcers 가 없습니다. 건너뜀
announcers.announcer.not.found   = Announcer {}를 찾을 수 없습니다. 건너뜀
announcers.announcer.not.enabled = Announcer {}가 활성화되어 있지 않습니다. 건너뜀
announcers.announcer.excluded    = Announcer {}는 제외되었습니다. 건너뜀
announcers.announcer.disabled    = 비활성화됨. 건너뜀
ERROR_unsupported_announcer      = 지원하지 않는 announcer {}
ERROR_announcer_not_configured   = Announcer {} 가 구성되지 않았습니다.

assemblers.not.enabled                     = Assembling 이 활성화되어 있지 않습니다. 건너뜀
assemblers.no.match                        = {}와 일치하는 assemblers가 없습니다.
assemblers.distribution.not.configured     = Distribution {}는 {}와 assembling이 구성되지 않았습니다.
assemblers.assemble.distribution.with      = {} distribution을 {}로 Assembling
assemblers.assemble.distribution.with.all  = {} distribution을 모든 assemblers로 Assembling
assemblers.assemble.all.distributions.with = 모든 distributions을 {}로 Assembling
assemblers.assemble.all.distributions      = 모든 distributions을 Assembling
assemblers.distribution.skip               = {} distribution을 건너뛰기
assemblers.distribution.assemble           = {} distribution을 assembling
assemblers.assembler.excluded              = Assembler {}:{} 는 제외되었습니다. 건너뜀
ERROR_unsupported_assembler                = 지원하지 않는 assembler {}

ERROR_unexpected_error_changelog = 변경 로그를 생성할 때 예기치 않은 오류가 발생했습니다.
ERROR_cannot_read_changelog      = {}에서 변경 로그를 읽을 수 없습니다.

checksum.header                           = Checksums 계산
checksum.not.enabled                      = Checksums 대해 설정된 파일이 없습니다. 건너뜀
checksum.not.changed                      = 모든 checksums이 최신 상태입니다. 건너뜀
checksum.not.exist                        = Checksum이 존재하지 않습니다.: {}
checksum.file.newer                       = {}가 {}보다 최신입니다.
checksum.reading                          = {} 읽는 중
ERROR_unexpected_error_checksum           = Checksums을 {}에 쓰는동알 예기치 않은 오류가 발생했습니다.
ERROR_artifact_does_not_exist             = Artifact가 존재하지 않습니다. {}
ERROR_unexpected_error_hash_read          = {}의 해시값을 읽는 동안 예기치 않은 오류가 발생했습니다.
ERROR_unexpected_error_calculate_checksum = {}의 checksum을 계산하는 동안 예기치 않은 오류가 발생했습니다.

packagers.packager.excluded                = packager {}가 제외되었습니다. 건너뜀
distributions.distribution.excluded        = distribution {}가 제외되었습니다. 건너뜀
distributions.not.enabled                  = {}에 대해 활성화 된 distributions이 없습니다. 건너뜀
distributions.no.match                     = Distribution {} 이 존재하지 않습니다.
distributions.apply.action                 = {} distributions
distributions.apply.action.to              = - {} {} distribution
distributions.skip.distribution            = {} distribution 건너뛰기
distributions.not.supported.distribution   = {} distribution은 {} 타입을 지원하지 않습니다. 건너뜀
distributions.action.preparing.capitalize  = Preparing
distributions.action.packaging.capitalize  = Packaging
distributions.action.publishing.capitalize = Publishing
distributions.action.preparing             = preparing
distributions.action.packaging             = packaging
distributions.action.publishing            = publishing
distributions.apply.action.distribution    = {} {} distribution
distributions.failure                      = 실패: {}
distributions.previous.failure             = 이전 실패로 인해 건너뜁니다.
ERROR_unsupported_packager                 = 지원하지 않는 packager {}

ERROR_releaser_no_match = 적절한 git releaser가 설정되지 않았습니다.

signing.header                       = 파일 서명
signing.not.enabled                  = 서명이 활성화되어 있지 않습니다. 건너뜀
signing.no.match                     = 서명할 파일이 설정되어 있지 않습니다. 건너뜀
signing.up.to.date                   = 모든 서명은 최신 상태이며 유효합니다. 건너뜀
signing.verify.signatures            = {} 서명 확인
signing.signing.files                = {} 파일을 {}에 서명
signing.signature.not.exist          = 서명이 존재하지 않습니다.: {}
signing.file.newer                   = {}가 {}보다 최신입니다.
ERROR_signing_verify_file            = 서명이 {}인 {} 파일을 확인할 수 없습니다.
ERROR_signing_verify_signature       = {}의 서명을 확인하는 중 오류 발생
ERROR_signing_create_signature_dir   = signatures 디렉토리를 생성할 수 없습니다.
ERROR_unexpected_error_signature_gen = signature generator를 초기화 하는 동안, 예기치 않은 오류가 발생했습니다.
ERROR_unexpected_error_signing       = 서명할 때 예기치 않은 오류가 발생했습니다.
ERROR_public_key_not_found           = 서명을 위한 공개 키를 찾을 수 없습니다.
ERROR_password_incorrect             = 암호가 일치하지 않음

uploaders.not.enabled               = Uploading이 활성화되어 있지 않습니다. 건너뜀
uploaders.no.match                  = {}와 일치하는 uploaders 가 없습니다.
uploaders.uploader.not.configured   = Uploader {}/{}가 설정되지 않음.
uploaders.uploader.not.configured2  = Uploader {}가 설정되지 않음.
uploaders.upload.with               = {}/{}로 uploading 
uploaders.upload.all.artifacts.with = {}로 모든 아티팩트 uploading
uploaders.upload.all.artifacts.to   = {}에 모든 아티팩트 uploading
uploaders.upload.all.artifacts      = 모든 아티팩트 uploading
uploaders.skip.upload               = {}에 대한 upload 건너뛰기
uploaders.upload.to                 = {}에 uploading
uploaders.uploader.excluded         = Uploader {}:{} 가 제외되었습니다. 건너뜀
uploaders.uploader.disabled         = Uploader {}:{} 가 활성화되어 있지 않습니다. 건너뜀
ERROR_unsupported_uploader          = 지원하지 않는 uploader {}

packager.publish.snapshot.not.supported = 스냅샷 게시가 허용되지 않습니다. 건너뜀.
packager.create.properties              = {}/{}에 대한 properties 생성
packager.skip.distribution              = {} distribution 건너뛰기
ERROR_copy_files_from_to                = {}에서 {}로 파일 복사 실패
ERROR_unexpected_copy_files_from_to     = {}에서 {}로 파일 복사시 예기치 않은 오류 발생
packager.no.matching.artifacts          = distribution {}에서 {}과(와) 함께 패키징할 적절한 아티팩트를 찾을 수 없음.
packager.fill.distribution.properties   = props에 distribution 속성을 넣습니다.
packager.fill.git.properties            = props에 git 속성을 넣습니다.
packager.fill.artifact.properties       = props에 artifact 속성을 넣습니다.
packager.fill.packager.properties       = props에 packager 속성을 넣습니다.
packager.resolve.templates              = {}/{}에 대한 template 확인
packager.skipped.template               = {}/{}에 대한 template {} 건너뛰기
packager.evaluate.template              = {}/{}에 대한 template {} 적용
packager.write.template                 = {}/{}에 대한 template {} 쓰기
packager.write.file                     = {}/{}에 대한 {} 파일 쓰기
packager.copy.license                   = 라이센스 파일 복사

ERROR_brew_multiplatform_artifacts       = 일치하는 multi-platform 바이너리가 없습니다.
ERROR_packager_requires_platform         = {}에서 실행해야 합니다.
ERROR_packager_excludes_platform         = {}에서 실행할 수 없습니다.
ERROR_chocolatey_nuget_not_found         = {}에서 *.nupkg을 찾지 못했습니다.
dryrun.set                               = dry-run이 true로 설정되었습니다. 건너뜀
docker.login                             = {}{}에 로그인
docker.tag                               = {}를 {}로 tagging
docker.push                              = {}를 {}로 pushing
docker.logout                            = {}{}에서 로그아웃
sdkman.no.artifacts.match                = 아티팩트 {}는 Sdkman publication에 적합하지 않습니다. 건너뜀
sdkman.artifact.explicit.skip            = 아티팩트 {}를 명시적으로 건너뜁니다.
sdkman.platform.replacement              = Platform {}: {} will replace {}
sdkman.platform.unsupported              = Sdkman은 {} 플랫폼을 지원하지 않습니다.
sdkman.publish.major                     = '{}' 의 major release candidate 를 게시.
sdkman.publish.minor                     = '{}' 의 minor release candidate 를 게시.
ERROR_project_no_license_url             = 프로젝트에서 licenseUrl 값이 정의되지 않았습니다.

tool.cached                              = {} 캐시됨
tool.located                             = {}에 위치
tool.downloading                         = {} 다운로드 중
tool.downloaded                          = {}을(를) 다운로드했습니다.
tool.unpacked                            = unpacked {}
tool.not.found                           = {}을(를) 찾을 수 없습니다.
tool.download.error                      = {}을(를) 다운로드/복사할 수 없습니다.

tool_verify_error                          = {} {}를 확인할 수 없습니다. 건너뜀
tool_unavailable                           = {}는 사용할 수 없습니다. 건너뜀
cosign.generated.keys.at                   = {}에 cosign key 쌍 생성 
WARN_cosign_password_does_not_match        = cosign 비밀번호가 일치하지 않습니다.
ERROR_unexpected_generate_key_pair         = 키 쌍 생성 중 예기치 않은 오류 발생
assembler.fill.assembler.properties        = props에 assembler 속성을 넣습니다.
ERROR_unexpected_error_writing_file        = {}에 쓸 때 예기치 않은 오류가 발생했습니다.
ERROR_command_execution_exit_value         = Command 실행 에러. exitValue = {}
assembler.jlink.jdk                        = jdk 버전은 {} {} 입니다.
assembler.jlink.target                     = 대상 버전은 {} {} 입니다.
ERROR_jlink_target_not_compatible          = 대상 JDK {} 이 {}와 호환되지 않습니다.
assembler.copy.jars                        = JARs를 {}에 복사
assembler.copy.files                       = {}에 파일 복사
ERROR_assembler_delete_archive             = 이전 아카이브를 삭제할 수 없습니다. {}
assembler.resolved.module.names            = 확인된 모듈 이름: {}
assembler.module.names                     = 모듈이름: {}
ERROR_assembler_no_module_names            = 모듈 이름을 확인할 수 없습니다.
ERROR_assembler_jdeps_error                = jdeps를 실행할 때 오류가 발생했습니다.:\n{}
ERROR_assembler_delete_dir                 = {}을 삭제할 수 없습니다.
ERROR_assembler_delete_image               = 이전 이미지 {}를 삭제할 수 없습니다.
ERROR_assembler_adjusting_image            = 이미지 {}를 수정할 수 없습니다.
ERROR_assembler_copy_jars                  = JARs를 {}로 복사할 수 없습니다.
ERROR_assembler_copy_launcher              = Launcher를 {}로 복사할 수 없습니다.
ERROR_assembler_invalid_jdk_release        = 잘못된 JDK {} release 파일을 찾을 수 없습니다.
ERROR_assembler_invalid_jdk_release_file   = 잘못된 JDK {} release 파일입니다.
assembler.copying                          = 복사 {}
ERROR_assembler_copying_jars               = JAR files을 복사하는 동안 예기치 않은 오류가 발생했습니다.
ERROR_assembler_copying_files              = 파일을 복사하는 동안 예기치 않은 오류가 발생했습니다.
ERROR_assembler_create_directories         = 디렉토리를 생성할 수 없습니다.
assembler.graal.java                       = java 버전은 {} {} 입니다.
assembler.graal.graal                      = graal 버전은 {} {} 입니다.
assembler.graal.install.native.exec        = native-이미지 실행 파일 설치
ERROR_assembler_invalid_graal_release      = 잘못된 Graal {} release 파일을 찾을 수 없습니다.
ERROR_assembler_invalid_graal_release_file = 잘못된 Graal {} release 파일입니다. 
assembler.jpackage.jdk                     = jdk 버전은 {} {} 입니다.
assembler.jpackage.type                    = packaging as {}
ERROR_jpackage_minimum_jdk_required        = jpackager는 최소 JDK 16 버전이 필요합니다. JDK 버전은 {} 입니다.
ERROR_jpackage_runtime_image_not_found     = 일치하는 runtime image를 찾을 수 없습니다. {}

ERROR_invalid_config_file       = 잘못된 설정 파일. {}
ERROR_parsing_config_file       = 설정 파일을 파싱하는 동안 예기치 않은 오류가 발생했습니다. {}
ERROR_load_resource             = 리소스를 로드하는 중에 예기치 않은 오류가 발생했습니다. {}
ERROR_unsupported_config_format = 지원하지 않는 config 형식: {}

releaser.tag.and.release.skipped = Release 및 tag를 건너뜁니다.

artifacts.not.exists                     = 아티팩트가 존재하지 않습니다.: {}
artifacts.newer                          = {}가 {}보다 최신입니다.
ERROR_artifacts_unexpected_error_copying = A를 B로 복사하는 동안 예기치 않은 오류가 발생했습니다.\n{}
ERROR_artifacts_glob_missing_input       = 입력 값이 존재하지 않습니다: {}
ERROR_artifacts_glob_resolution          = 일부 glob을 확인할 수 없습니다.
ERROR_artifacts_unexpected_error_globs   = glob을 확인하는 동안 예기치 않은 오류가 발생했습니다.
ERROR_artifacts_unexpected_error_path    = {} 경로를 확인하는 동안 예기치 않은 오류가 발생했습니다.
ERROR_artifacts_download_url_missing     = {}에 대한 downloadUrl을 확인할 수 없음. {}의 기본 설정 사용

validation_java_home_missing             = Java home 을 찾을 수 없습니다.
validation_s3_missing_download_url       = {}는 custom endpoint가 지정되어 있지만, downloadUrl가 지정되지 않았습니다.
validation_gitlab_non_matching_uploader  = Uploader {}:{} 가 설정되지 않았습니다.
validation_artifactory_disabled_repositories = {}은(는) 활성화된 저장소가 없습니다.
validation_artifactory_no_repositories   = {}은(는) 저장소를 정의하지 않았습니다.
validation_must_define_pattern           = {}은(는) 패턴을 정의해야 합니다.
validation_version_format_missing        = {}은(는) {}:<format>과 같은 형식을 정의해야 합니다.
validation_must_not_be_blank             = {}은(는) 공백일 수 없습니다.
validation_must_not_be_null              = {}은(는) null일 수 없습니다.
validation_is_null                       = {}은(는) null 입니다.
validation_is_empty                      = {}이(가) 비어 있습니다.
validation_is_missing                    = {}이(가) 누락되었습니다.
validation_are_missing                   = {}이(가) 누락되었습니다.
validation_directory_not_exist           = {}이(가) 존재하지 않습니다.: {}
validation_is_not_a_directory            = {}은(는) 디렉토리가 아닙니다.: {}
validation_directory_is_empty            = {}이(가) 비어있습니다.: {}
validation_must_not_be_empty             = {}은(는) 비워둘 수 없습니다.
validation_value_cannot_be               = {}는 {}일 수 없습니다.
validation_multiple_assemblers           = {}는 1개 이상의 assembler를 갖고 있습니다.: {}
validation_chocolatey_package_version    = chocolatey 패키지 버전이 잘못되었습니다. {}. SemVer에 따라 .number 또는 .yyyyMMdd 를 태그로 지정합니다.
validation_brew_multiple_artifact        = {}은(는) 둘 이상의 아티팩트 {} 를 갖고 있습니다.
validation_brew_single_artifact          = {}에는 .dmg, .pkg, .zip 중 일치하는 아티팩트가 한개만 있을 수 있습니다.
validation_brew_duplicate_definition     = {}은(는) 둘 이상의 distribution {} 를 갖고 있습니다. 
# do not translate .buildOn
validation_snap_missing_buildon          = {}[{}].buildOn 은 하나 이상의 항목을 정의해야 합니다.
validation_packager_multiple_artifacts   = {}은(는) 패키징 할 수 있는 아티팩트가 1개 이상 있음.
validation_discussions_enabled           = Discussions은 GitHub에 release할 때만 사용할 수 있습니다.
validation_distributions_java            = {} 는 {}로 셋팅 되었지만, {} 와 {} 는 모두 셋팅되지 않았습니다.
validation_distributions_multiple        = {} 에는 {} 플랫폼이 있는 확장 {}용 아티팩트가 두 개 이상 있습니다.
validation_distributions_java_types      = {}은(는) [{}]중 하나인, 올바른 Java distribution 유형이어야 합니다.
# do no translate distribution.{}.artifact[{}].platform
validation_distributions_platform        = distribution.{}.artifact[{}].platform ({}) 지원하지 않습니다. \
  Please use `${name}` or `${name}-${arch}` from{}       name = {}{}       arch = {}
# keep these spaces ----------------------------->       <--------->       <------->
# do not translate distribution., platform
validation_distributions_platform_check  = distribution.{} 유형은 {}이며, {}에는 각 아티팩트에 대한 명시적 platform이 필요합니다.
# do not translate distribution.
validation_distributions_disable         = distribution.{}을 비활성화 합니다.{} 일치하는 아티팩트가 없기 때문에.
# do not translate .sign
validation_git_signing                   = {}.sign 가 `true`로 설정되어 있지만 서명 블록이 활성화되어 있지 않습니다.
validation_git_signing_cosign            = {}.sign 가 `true`로 설정되어 있지만 서명 블록이 COSIGN 모드 입니다. 비활성화
validation_git_required                  = {}, {}, 또는 {} 가 필요합니다.
# do not translate .changelog
validation_changelog_multiple_categories = {}.changelog 에는 카테고리가 두 개 이상 있습니다. 제목: {}
# do not translate distribution.{}.jbang
validation_jbang_reverse_host            = distribution.{}.jbang 는 이름이 {}인 extra 속성을 정의해야 합니다.
# do not translate jbang.alias
validation_jbang_multiple_definition     = jbang.alias {} 은 두 개 이상의 distribution이 정의되어 있습니다.: {}
validation_missing_assembly              = {}.{}. 에대한 출력이 누락되었습니다. Distribution {} 이 assembled 되지 않았습니다.
# do not translate archive.
validation_archive_empty_fileset         = archive.{} 는 fileSets을 정의하지 않았습니다.
# do not translate jlink., platform
validation_jlink_jdk_platform            = jlink.{}는 platform없이 JDKs를 정의합니다.
# do not translate jlink.
validation_jlink_jdk_multiple_platforms  = jlink.{}에는 {}에대한 JDK가 두 개 이상 있습니다.
# do no translate jlink.{}.targetJdk[{}].platform
validation_jlink_platform                = jlink.{}.targetJdk[{}].platform ({}) is not supported. \
  Please use `${name}` or `${name}-${arch}` from{}       name = {}{}       arch = {}
# keep these spaces ----------------------------->       <--------->       <------->
# do not translate nativeImage., platform
validation_nativeimage_jdk_platform      = nativeImage.{}는 platform없이 JDKs를 정의합니다.
# do not translate nativeImage.
validation_nativeimage_jdk_multiple_platforms = nativeImage.{}에는 {}에 대한 JDK가 두 개 이상 있습니다.
# do no translate nativeImage.{}.graalJdk[{}].platform
validation_nativeimage_platform          = nativeImage.{}.graalJdk[{}].platform ({})은 지원하지 않습니다. \
  Please use `${name}` or `${name}-${arch}` from{}       name = {}{}       arch = {}
# keep these spaces ----------------------------->       <--------->       <------->
# do no translate jpackage.{}.runtimeImage[{}].platform
validation_jpackage_platform             = jpackage.{}.runtimeImage[{}].platform ({})은 지원하지 않습니다. \
  Please use `${name}` or `${name}-${arch}` from{}       name = {}{}       arch = {}
# keep these spaces ----------------------------->       <--------->       <------->
# do not translate jpackage., jlink, runtimeImage
validation_jpackage_jlink_application    = jpackage.{}는 jlink 와 runtimeImages를 모두 정의하지만, 하나만 사용할 수 있습니다.
validation_jpackage_invalid_appversion   = app-버전의 첫번째 숫자는 0이나 음수일 수 없습니다. ({}).\n\
수정 방법: 호환되는 'app-version' 값을 설정합니다. 점으로 구분된 1~3개의 정수가 유효한 Version 입니다.
validation_jpackage_invalid_mac_package_identifier = {} 는 {}와 일치하지 않습니다.
validation_jpackage_invalid_mac_package_name       = {} 는 16자를 초과할 수 없습니다.
# do not translate jpackage.{}.runtimeImage.path
validation_jpackage_runtime_images_missing          = jpackage.{}.runtimeImages 가 없습니다.
# do not translate jpackage.{}.vendor
validation_jpackage_missing_vendor       = jpackage.{}.vendor 가 없습니다.
# do not translate jpackage., platform
validation_jpackage_runtime_image_platform = jpackage.{}는 platform없이 runtime images를 정의합니다. 
# do not translate jpackage.
validation_jpackage_runtime_image_multiple_platforms  = jpackage.{} {}에 대한 runtime image가 두 개 이상 있습니다.
validation_mail_not_blank                = {} 또는 {}을(를) 비워 둘 수 없습니다.
# do not translate docker.specs
validation_packagers_docker_specs        = docker.specs 은(는) distributions 내에서만 정의할 수 있습니다.
validation_release_no_providers          = 설정된 release provider가 없습니다.
validation_release_requirement           = {} 중 하나만 활성화할 수 있습니다.
validation_skdman_disable                = 활성화된 distributions가 없습니다. Sdkman announcer을 비활성화 합니다.
# do not translate sdkman.candidate
validation_sdkman_multiple_definition    = sdkman.candidate {} 는 정의된 distribution가 두 개 이상 있습니다.: {}
# do not translate slack.token, slack.webhook
validation_slack_token                   = slack.token 혹은 slack.webhook가 제공되어야 합니다.

default.discussion.title = {{projectNameCapitalized}} {{projectVersion}} released!
default.release.message  = 🚀 {{projectNameCapitalized}} {{projectVersion}} released 됨! {{releaseNotesUrl}}
default.category.feature = ✅ Features
default.category.bug.fix = 🐛 Bug Fixes

ERROR_path_does_not_exist               = {} 경로가 존재하지 않습니다.
ERROR_unexpected_error_reading_template = {} template을 읽는 도중 예기치 못한 오류가 발생했습니다.
ERROR_packager_name_not_blank           = Packager 이름은 비워 둘 수 없습니다.
ERROR_packager_not_configured           = Packager {} 가 설정되지 않았습니다.
ERROR_packager_not_supported            = Packager {} 은 지원되지 않습니다.

environment.load.variables           = {}에서 변수를 로딩 중.
environment.variables.load.error     = {}에서 변수를 불러올 수 없습니다.
environment.variables.source.missing = 변수 원본 {}이(가) 존재하지 않습니다.

ERROR_unexpected_glob_resolve = Glob {}을(를) 확인하는 동안 예기치 않은 오류 발생
ERROR_glob_resolve            = Glob {}을(를) 확인할 수 없습니다.

context.platform.selection.active    = 플랫폼 선택이 적용됩니다.
context.platform.selection.no.match  = 플랫폼이 일치하지 않습니다.: {}
context.platform.selection.valid     = Please use `${name}` or `${name}-${arch}` from{}        name = {}{}        arch = {}
# keep these spaces ------------------------------------------------------------------>        <--------->        <------->
context.platform.selection.unmatched = 일치하지 않는 플랫폼: {}
context.platform.selection.artifacts = 아티팩트는 일치하는 플랫폼으로 핕터링 될 것 입니다.: {}
context.configuration.validation     = 설정을 확인하는 중.
context.adjust.assemblies            = assemblies로 distributions 조정
context.writing.properties           = {}에 output 속성을 쓰는 중.
context.writing.properties.error     = output 속성을 {}에 쓸 수 없습니다.
ERROR_signing_init_keyring           = keyring을 초기화 할 수 없습니다.
ERROR_distribution_name_is_blank     = Distribution 이름은 공백일 수 없습니다.
ERROR_distribution_not_found         = Distribution {} 을(를) 찾을 수 없습니다.
ERROR_version_invalid                = Version {} 가 {} 규격을 따르지 않습니다.
ERROR_invalid_function_input         = '{}'는 {}에 대해 잘못된 입력입니다.

templates.resource.resolve.classpath            = {}에 대한 classpath에서 리소스 확인.
templates.templates.resolve.classpath           = classpath에서 template을 확인.
templates.template.resolve.classpath            = {}에 대한 classpath에서 template을 확인
changelog.preset.not.found                      = changelog의 프리셋 {}을(를) 찾을 수 없음.
ERROR_classpath_template_resolve                = classpath template의 위치를 찾을 수 없습니다.
ERROR_unexpected_reading_template_for           = {}에 대한 template을 {}에서 읽는동안, 예기치 않은 오류 발생
ERROR_unexpected_reading_resource_for           = {}에 대한 resource를 {}에서 읽는동안, 예기치 않은 오류 발생
ERROR_unexpected_reading_templates_distribution = Unexpected error reading templates for distribution {}/{} from {}
ERROR_unexpected_reading_templates_from         = Unexpected error reading templates from {}
ERROR_template_not_found                        = Template for {} was not found
ERROR_resource_not_found                        = Resource {} was not found

templates.announcer.not.supported = Announcer {} 은(는) 지원되지 않습니다.
templates.create.directory        = Output 디렉토리 {}을(를) 생성하는 중
templates.writing.file            = {} 파일을 쓰는 중.
templates.file_exists.error       = {} 파일이 이미 존재함, 덮어쓰기가 false로 설정되어 있음.
# do not translate distributionType, distributionName, toolName
ERROR_unexpected_template_fail    = template을(를) 생성하는 동안 예기치 못한 오류 발생. distributionType={}, distributionName={}, toolName={}

ERROR_environment_property_check  = {}은(는) 공백일 수 없습니다. {}를 사용하여 값을 설정하거나, {} 환경 변수를 정의하거나, {}에서 key = {}를 사용하여 키/값을 정의하십시오.
ERROR_files_unpack_outside_target = 항목이 대상 디렉토리 외부에 있습니다.: {}
ERROR_files_unpack_fail_dir       = 디렉토리를 생성하지 못했습니다.: {}
ERROR_files_copy                  = 복사할 수 없음: {}
ERROR_files_create                = 생성할 수 없음: {}
ERROR_files_cycle                 = Cycle이 감지됨: {}
ERROR_files_copy_attributes       = 모든 속성을 복사할 수 없음: {}
ERROR_mustache_write_value        = 값을 쓰는데 실패:
files.copy                        = {}에서 {}로 파일 복사

ERROR_unexpected_release_announce = announcing release시 예기치 않은 오류가 발생했습니다.
ERROR_unexpected_release_create   = creating release시 예기치 않은 오류가 발생했습니다.
ERROR_unexpected_release_sign     = signing release시 예기치 않은 오류가 발생했습니다.
workflow.dryrun                   = dry-run 를 {}로 설정
workflow.success                  = JReleaser는 {}에 이어 성공
workflow.failure                  = JReleaser는 {}에 이어 실패
workflow.included.announcers      = 포함된 announcers: {}
workflow.excluded.announcers      = 제외된 announcers: {}
workflow.included.assemblers      = 포함된 assemblers: {}
workflow.excluded.assemblers      = 제외된 assemblers: {}
workflow.included.distributions   = 포함된 distributions: {}
workflow.excluded.distributions   = 제외된 distributions: {}
workflow.included.packagers       = 포함된 packagers: {}
workflow.excluded.packagers       = 제외된 packagers: {}
workflow.included.uploader.types  = 타입별 포함된 uploaders: {}
workflow.excluded.uploader.types  = 타입별 제외된 uploaders: {}
workflow.included.uploader.names  = 이름별 포함된 uploaders: {}
workflow.excluded.uploader.names  = 이름별 제외된 uploaders: {}

ERROR_unexpected_article_announcer   = {}을 preparing하는 동안 예기치 않은 오류가 발생했습니다.
# no not translate article
announcer.article.resolve.templates  = Article announcer에 대한 templates을 확인.
announcer.article.eval.template      = template {}을 적용.
announcer.article.write.template     = template {}을 쓰기.
ERROR_unexpected_template_resolution = {}의 teamplate을 확인하는 동안 예기치 않은 오류 발생
repository.disabled                  = {}로 푸시가 비활성화 됨. 건너뜀
repository.setup                     = 저장소 {} 설정
repository.locate                    = 저장소 {} 가져오기
repository.clone                     = {} 복제
repository.commit.setup              = 커밋 설정
repository.push                      = {}(으)로 푸시
repository.commit.push               = 원격으로 커밋 푸시
ERROR_unexpected_repository_update   = {}을 업데이트 중 예기치 않은 오류 발생
repository.copy.files                = {}에서 파일 복사
ERROR_repository_copy_files          = {}에서 파일을 복사할 수 없습니다.

artifacts.no.match      = 일치하는 아티팩트가 없습니다. 건너뜀
ERROR_unexpected_upload = {}을 업로드 하는동안, 예기치 않은 오류 발생
generic.git.warning     = generic Git 저장소로 release는 지원되지 않습니다.
changelog.disabled                      = Changelog가 비활성화 됨. 건너뜀.
changelog.generator.resolve.commits     = 커밋을 확인.
changelog.generator.sort.commits        = 커밋 {}을 정렬.
changelog.generator.lookup.tag          = '{}'과(와) 일치하는 태그를 찾는 중
changelog.generator.lookup.previous.tag = 이전 태그 '{}'을(를) 찾는 중
changelog.generator.lookup.matching.tag = '{}'과(와) 일치하는 태그를 '{}'을(를) 제외하고 찾는중
changelog.generator.lookup.before.tag   = '{}'과(와) 일치하는 태그를 '{}'이전에서 찾는중
changelog.generator.tag.found           = {} 태그를 찾음
changelog.generator.generate            = Changelog를 생성하는 중: {}
changelog.generator.read                = {}에서 changelog를 읽는 중
ERROR_changelog_not_exist               = Changelog {}를 찾을 수 없습니다.
ERROR_git_repository_remote             = 저장소에 이름이 '{}'인 원격이 없습니다.
ERROR_git_repository_remote_missing_url = {} 원격에 설정된 URL이 없습니다.
ERROR_git_repository_remote_url_parse   = 파싱할 수 없는 원격 URL {}
# do not translate origin
ERROR_git_repository_origin_remote      = 'origin' 원격을 확인할 수 없습니다.
ERROR_git_repository_list_local_branch  = 로컬 브랜치를 나열할 수 없습니다.
ERROR_git_delete_tag                    = 태그 {}를 삭제할 수 없습니다.
ERROR_git_find_tag                      = 태그 {}를 찾을 수 없습니다.
ERROR_git_create_tag                    = 태그 {}를 생성할 수 없습니다.
git.tag                                 = {} 태그
git.tag.lookup                          = {} 태그 조회.
git.tag.exists                          = {} 태그가 존재함.
git.tag.release                         = release {}를 태그.
ERROR_git_release_existing_tag          = 태그 {}가 이미 존재하기 때문에 release가 실패함. overwrite = false
git.tag.not.exist                       = {} 태그가 존재하지 않음.
git.push.release                        = {}(으)로 푸시.
git.push.tag                            = 원격에 태그 푸시, dryrun = {}
git.repository.lookup                   = {}/{} 저장소 조회.
git.repository.create                   = {}/{} 저장소 생성.
git.milestone.lookup                    = {}/{}에서 마일스톤 '{}' 조회
git.milestone.close                     = {}/{}에서 마일스톤 '{}'을(를) 닫기/
git.project.create                      = 프로젝트 {}/{} 생성.
git.fetch.current.user                  = 현재 사용자 가져오기.
git.fetch.gitlab.project_by_id          = GitLab의 id가 {}인 프로젝트를 가져오는 중.
git.fetch.gitlab.project.by.user        = {} 프로젝트를 가져옴 사용자 {} ({})에 대한.
ERROR_project_not_exist                 = 프로젝트 {} 가 존재하지 않거나, or 보이지 않음.
git.gitlab.project.found                = {} 찾음 (ID: {})
git.fetch.release.by.tag                = {}/{}의 release(태그 {})를 가져오는 중
git.fetch.release.on.tag                = {}에서 {}태그인 release를 가져옴.
git.delete.tag.from                     = {} 태그를 {}/{}에서 삭제.
git.delete.tag.from.repository          = {} 태그를 {}에서 삭제.
git.delete.release.from                 = {} release를 {}/{}에서 삭제
git.delete.release.from.id              = {} release를 {}/{}에서 삭제({})
git.create.release                      = {}/{}에서 태그가 {}인 release를 생성
git.create.release.repository           = {}에서 태그가 {}인 release를 생성
git.update.release                      = {}/{}에서 태그가 {}인 release 업데이트
git.upload.assets                       = {}/{}에 assets 업로드
git.upload.asset                        = - {} 업로드 중
git.upload.asset.failure                = x {} 업로드 실패
git.upload.asset.links                  = {}/{}에 태그가 {}인 assets 연결
git.upload.asset.link                   = - {} 연결 중
git.upload.asset.link.failure           = x {} 연결 실패.
git.user.lookup                         = {}에 대한 사용자 조회 <{}>
ERROR_git_organization_not_exist        = Organization {}이(가) 없습니다.
ERROR_git_team_not_exist                = Team {}이(가) 없습니다.
git.releaser.releasing                  = {}(으)로 release
git.releaser.release.lookup             = {} 태그가 있는 release를 {} 저장소에서 조회
git.releaser.release.exists             = release {}이(가) 존재함.
git.releaser.release.delete             = release {}을(를) 삭제
git.releaser.release.create             = release {}을(를) 생성
git.releaser.release.update             = release {}을(를) 업데이트
git.releaser.release.update.title       = release 제목을 {}로 업데이트
git.releaser.release.update.body        = release 본문 업데이트
git.releaser.release.not.found          = release {}이(가) 존재하지 않습니다.
git.releaser.user.not.found             = {}과(와) 일치하는 사용자를 찾을 수 없습니다.
git.releaser.repository.tag             = {} @ {}을(를) 사용하여 로컬 저장소 태그 지정
ERROR_git_release_branch_not_exists     = 확인할 수 없는 분기 '{}'. 사용 가능한 분기는 다음과 같습니다.: {}
ERROR_git_releaser_cannot_release       = {} release는 {}release이(가) 이미 있기 때문에 실패했습니다. overwrite = false; update = false
git.releaser.link.discussion            = release {}을(를) {} discussion과 연결
git.releaser.link.discussion.error      = release {}을(를) discussion 카테고리 {}로 업데이트할 수 없습니다.
ERROR_git_discussion_duplicate          = 제목이 "{}"인 discussion이 이미 {}/{}에 게시되었습니다.
warn_ssl_disabled                       = ** SSL 유효성 검사가 비활성화되었습니다. 모든 불상사는 당신의 책임입니다. **
webhook.connection.open                 = 연결 열기
webhook.connection.configure            = 연결 설정
webhook.message.send                    = 메세지 전송
webhook.data.send                       = 데이터 전송
webhook.response.handle                 = response 처리
sdk.operation.failed                    = {} 작업 실패
sdkman.release.announce                 = '{}'의 release candidate을 announce {}
ERROR_sdkman_announce                   = 일부 candidates의 announce를 실패
sdkman.no.suitable.artifacts            = No suitable artifacts were found. Skipping
sdkman.release.announce.major           = '{}'의 major release candidate을 announce
sdkman.release.announce.minor           = '{}'의 minor release candidate을 announce
twitter.tweet                           = tweeting: {}
twitter.tweet.size                      = 상태는 {} 글자 입니다.
mastodon.toot                           = tooting: {}
mastodon.toot.size                      = 상태는 {} 글자 입니다.
ERROR_unexpected_json_format            = 메시지를 JSON으로 변환 하는 도중 예기치 않은 오류 발생
mail.message.send                       = 이메일 announcement 보내기
s3.bucket.check                         = 버킷 {}이(가) 있는지 확인.
s3.bucket.create                        = {} 버킷 생성
s3.object.check                         = s3://{}/{}이(가) 있는지 확인.
s3.object.create                        = s3://{}/{} 생성
s3.object.write                         = s3://{}/{} 쓰기
s3.object.acl                           = s3://{}/{} 에 읽기 권한 추가
ERROR_unexpected_s3_client_config       = AWS S3 client를 빌드하는 중 에러 발생.

disco.fetch.packages                    = {}로 패키지 가져오기
disco.fetch.package                     = {} 패키지를 가져오는 중
disco.multiple.packages                 = 디스코에서 {}개의 패키지를 리턴함.
disco.package.not.downloadable          = {}는 직접 다운로드할 수 없습니다.
ERROR_disco_resolve_package             = Disco가 결과를 리턴하지 않음: {}
ERROR_disco_resolve_pkg                 = Disco는 ephemeralId {}에 대한 결과를 리턴하지 않음.

# text
jreleaser.init.TEXT_writing_file   = {} 파일 쓰는 중
jreleaser.init.TEXT_success        = {} 으로 JReleaser 초기화 됨.
# errors
jreleaser.init.ERROR_invalid_format = 지원하지 않는 파일 포맷. [{}] 중 하나여야 함.
jreleaser.ERROR_file_exists    = 이미 {} 파일이 존재하고, 덮어쓰기가 false로 설정됨.