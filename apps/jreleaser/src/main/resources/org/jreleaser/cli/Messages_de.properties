#
# SPDX-License-Identifier: Apache-2.0
#
# Copyright 2020-2022 The JReleaser authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

###############################################################################
# Shared
###############################################################################
# header
usage.headerHeading      = JReleaser ist ein Veröffentlichungsautomatisierungswerkzeug für Java-Projekte.%n
jreleaser.usage.header.0 = Dieses Werkzeug vereinfacht das Erstellen und Veröffentlichen
jreleaser.usage.header.1 = von Java-Produkten bei verschiedenen Diensten, die ausführbare
jreleaser.usage.header.2 = Programme bereitstellen.
usage.synopsisHeading    = %nVerwendung:\u0020
usage.optionListHeading  = %nOptionen:%n
usage.commandListHeading = %nKommandos:%n
usage.footerHeading      = %nDie Dokumentation ist hier: https://jreleaser.org%n
helpCommand.command      = KOMMANDO
help                     = Zeigt diesen Hilfetext an und beendet die Programmausführung.
version                  = Zeigt die Version an und beendet die Programmausführung.
filter.header            = %nFilter:%n
include.filter.header    = %nInklusionsfilter:%n
exclude.filter.header    = %nExklusionsfilter:%n
# options
debug             = Gibt detailierte Zustands- und Fortschrittsmeldungen aus.
info              = Gibt nur normale Meldungen aus.
warn              = Gibt nur Warnmeldungen aus.
quiet             = Gibt nur Fehlermeldungen aus.
basedir           = Basisverzeichnis.
output-directory  = Ausgabeverzeichnis.
overwrite         = Überschreibt bereits existierende Dateien.
dry-run           = Überspringt alle externen Aktionen.
announcer             = Inkludiert einen Announcer. Wiederholbar.
exclude-announcer     = Schließt einen Announcer aus. Wiederholbar.
assembler             = Inkludiert einen Assembler. Wiederholbar.
exclude-assembler     = Schließt einen Assembler aus. Wiederholbar.
packager              = Inkludiert einen Packager. Wiederholbar.
exclude-packager      = Schließt einen Packager aus. Wiederholbar.
distribution          = Inkludiert eine Distribution. Wiederholbar.
exclude-distribution  = Schließt eine Distribution aus. Wiederholbar.
uploader              = Inkludiert einen Uploader (Typ). Wiederholbar.
exclude-uploader      = Schließt einen Uploader (Typ) aus. Wiederholbar.
uploader-name         = Inkludiert einen Uploader (Name). Wiederholbar.
exclude-uploader-name = Schließt einen Uploader (Name) aus. Wiederholbar.
downloader              = Inkludiert einen Downloader (Typ). Wiederholbar.
exclude-downloader      = Schließt einen Downloader (Typ). Wiederholbar.
downloader-name         = Inkludiert einen Downloader (Name) aus. Wiederholbar.
exclude-downloader-name = Schließt einen Downloader (Name) aus. Wiederholbar.
# errors
ERROR_trace_file_init  = Tracedatei konnte nicht initialisiert werden
ERROR_unexpected_error = Unerwarteter Fehler

###############################################################################
# Shared - AbstractModelCommand
###############################################################################
# options
config-file     = Die Konfigurationsdatei.
git-root-search = Sucht nach dem GIT Basisverzeichnis.
system-property = Setzt den Wert einer Systemeigenschaft. Wiederholbar.
set-property    = Setzt den Wert einer Eigenschaft. Wiederholbar.
# text
TEXT_config_file = Konfiguriere mit {}
TEXT_basedir_set = - Basisverzeichnis 'basedir' ist {}
# errors
ERROR_missing_config_file     = Es fehlt die Konfigurationsdatei namens 'jreleaser[{}]' oder '--config-file=<configFile>'
ERROR_missing_required_option = Es fehlt ein Argument für die Option: '{}'
ERROR_invalid_config_format   = Ungültiges Konfigurationsformat: {}
ERROR_invalid_property        = Ungültige Eigenschaft '{}'

###############################################################################
# Shared - AbstractPlatformAwareModelCommand
###############################################################################
# options
select-current-platform = Aktiviert Dateipfade für die aktuelle Plattform.
select-platform         = Aktiviert Dateipfade für die angebene Plattform. Wiedeholbar.

###############################################################################
 # Announce
###############################################################################
# header
jreleaser.announce.usage.headerHeading =
jreleaser.announce.usage.header        = Kündige eine Veröffentlichung an.

###############################################################################
# Assemble
###############################################################################
# header
jreleaser.assemble.usage.headerHeading =
jreleaser.assemble.usage.header        = Distributionen zusammenstellen.

###############################################################################
# Changelog
###############################################################################
# header
jreleaser.changelog.usage.headerHeading =
jreleaser.changelog.usage.header        = Erstelle die Änderungsliste.

###############################################################################
# Checksum
###############################################################################
# header
jreleaser.checksum.usage.headerHeading =
jreleaser.checksum.usage.header        = Berechne Prüfsummen.

###############################################################################
# Config
###############################################################################
# header
jreleaser.config.usage.headerHeading =
jreleaser.config.usage.header        = Zeige die aktuelle Konfiguration an.
# options
jreleaser.config.full                = Zeige die vollständige Konfiguration an.
jreleaser.config.assembly            = Zeige die Zusammenstellungskonfiguration an.
jreleaser.config.download            = Zeige die Downloadkonfiguration an.

###############################################################################
# FullRelease
###############################################################################
# header
jreleaser.full-release.usage.headerHeading =
jreleaser.full-release.usage.header        = Führe eine vollständige Veröffentlichung aus.

###############################################################################
# Init
###############################################################################
# header
jreleaser.init.usage.headerHeading =
jreleaser.init.usage.header        = Erstelle eine Konfigurationsdatei für JReleaser.
# options
jreleaser.init.format              = Dateiformat der Konfigurationsdatei.
# text
jreleaser.init.TEXT_writing_file   = Schreibe Datei {}
jreleaser.init.TEXT_success        = JReleaser initialisiert in {}
# errors
jreleaser.init.ERROR_invalid_format = Nicht unterstütztes Dateiformat. Unterstützt werden: [{}]
jreleaser.init.ERROR_file_exists    = Die Datei {} existiert bereits und das Überschreiben wurde nicht erlaubt.

###############################################################################
# Package
###############################################################################
# header
jreleaser.package.usage.headerHeading =
jreleaser.package.usage.header        = Stelle alle Distributionen zusammen.

###############################################################################
# Prepare
###############################################################################
# header
jreleaser.prepare.usage.headerHeading =
jreleaser.prepare.usage.header        = Bereite alle Distributionen vor.

###############################################################################
# Publish
###############################################################################
# header
jreleaser.publish.usage.headerHeading =
jreleaser.publish.usage.header        = Veröffentliche Distributionen.

###############################################################################
# Release
###############################################################################
# header
jreleaser.release.usage.headerHeading =
jreleaser.release.usage.header        = Erstelle oder aktualisiere eine Veröffentlichung.
jreleaser.release.auto-config.header  = %nAutomatische Konfigurationsoptionen:%n
# options
jreleaser.release.auto-config                     = Aktiviert die automatische Konfiguration.
jreleaser.release.project-name                    = Der Name des Projekts.
jreleaser.release.project-version                 = Die Version des Projekts.
jreleaser.release.project-version-pattern         = Das Muster einer Version.
jreleaser.release.project-snapshot-pattern        = Das Muster einer Vorabversion.
jreleaser.release.project-snapshot-label          = Die Kennung einer Vorabversion.
jreleaser.release.project-snapshot-full-changelog = Erstellt eine vollständige Änderungsliste gegenüber der letzten Projektversion.
jreleaser.release.author                          = Die Authoren des Projekts. Wiederholbar.
jreleaser.release.project-copyright               = Das Copyright des Projekts.
jreleaser.release.project-description             = Die Beschreibung des Projekts.
jreleaser.release.project-inception-year          = Das Entstehungsjahr des Projekts.
jreleaser.release.project-stereotype              = Der Projekt Stereotyp.
jreleaser.release.tag-name                        = Der Name des GIT Etiketts (tag).
jreleaser.release.previous-tag-name               = Der Name des vorherigen Etiketts (tag).
jreleaser.release.release-name                    = Der Name der Veröffentlichung.
jreleaser.release.milestone-name                  = Der Name des Meilensteins.
jreleaser.release.prerelease                      = Eine Vorabveröffentlichung.
jreleaser.release.prerelease-pattern              = Das Muster einer Vorabveröffentlichung.
jreleaser.release.draft                           = Der Entwurf einer Veröffentlichung.
jreleaser.release.overwrite                       = Überschreibt eine bereits erstellte Veröffentlichung.
jreleaser.release.update                          = Aktualisiert eine bereits erstellte Veröffentlichung.
jreleaser.release.update-section                  = Der zu aktualisierende Abschnitt. Wiederholbar.
jreleaser.release.skip-tag                        = Überspringt die Erstellung eines GIT Etiketts (tag).
jreleaser.release.skip-release                    = Überspringt die Erstellung einer Veröffentlichung.
jreleaser.release.branch                          = Der Name des GIT Asts (branch).
jreleaser.release.changelog                       = Der Änderungslistendateipfad.
jreleaser.release.changelog-formatted             = Formatiert die erstellte Änderungsliste.
jreleaser.release.username                        = Der GIT-Benutzername.
jreleaser.release.commit-author-name              = Der Authorenname des GIT Commits.
jreleaser.release.commit-author-email             = Die Emailadresse des GIT Commits.
jreleaser.release.signing-enabled                 = Signiert zu veröffentliche Dateien.
jreleaser.release.signing-armored                 = Generiert ASCII-geschützte Signaturen.
jreleaser.release.file                            = Zu veröffentlichende Datei. Wiederholbar.
jreleaser.release.glob                            = Muster (glob) von zu veröffentlichenden Dateien. Wiedeholbar.

###############################################################################
# Sign
###############################################################################
# header
jreleaser.sign.usage.headerHeading =
jreleaser.sign.usage.header        = Signiere zu veröffentliche Dateien.

###############################################################################
# Template
###############################################################################
# header
jreleaser.template.usage.headerHeading =
jreleaser.template.usage.header        = Generiert eine Vorlage.
jreleaser.template.announcer.header    = %nVorlage, die für Ankündigungen verwendet wird%n
jreleaser.template.packager.header     = %nVorlage des Werkzeugs%n
# options
jreleaser.template.distribution-type   = Der Typ der Distribution.%nDer Standardtyp ist 'JAVA_BINARY'.
jreleaser.template.distribution        = Der Name der Distribution.
jreleaser.template.packager            = Der Name des Werkzeugs.
jreleaser.template.announcer           = Der Name des Verkündungsdienstes.
jreleaser.template.snapshot            = Verwende Vorabversionsvorlagen.
# text
jreleaser.template.TEXT_success        = Generierte Vorlage ist hier zu finden: {}

###############################################################################
# Upload
###############################################################################
# header
jreleaser.upload.usage.headerHeading =
jreleaser.upload.usage.header        = Lade alle zu veröffentlichenden Datei hoch.

###############################################################################
# Download
###############################################################################
# header
jreleaser.download.usage.headerHeading =
jreleaser.download.usage.header        = Assets herunterladen.

###############################################################################
# Json-Schema
###############################################################################
# header
jreleaser.json-schema.usage.headerHeading =
jreleaser.json-schema.usage.header        = JSON-Schema generieren.