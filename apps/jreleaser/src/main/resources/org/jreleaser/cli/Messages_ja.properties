#
# SPDX-License-Identifier: Apache-2.0
#
# Copyright 2020-2021 The JReleaser authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

###############################################################################
# Shared
###############################################################################
# header
usage.headerHeading      = JReleaserはJavaプロジェクトのリリース自動化ツールです%n
usage.header.0           = 様々なオプションでカスタマイズ可能で、リリースの作成と、
usage.header.1           = アーティファクトの複数のパッケージマネージャー向けへの
usage.header.2           = パブリッシュを簡単にすることをゴールとしています.
usage.synopsisHeading    = %nUsage:\u0020
usage.optionListHeading  = %nオプション:%n
usage.commandListHeading = %nコマンド:%n
usage.footerHeading      = %nドキュメントはこちら https://jreleaser.org%n
helpCommand.command      = コマンド
help                     = このヘルプメッセージを表示して終了する.
version                  = バージョン情報を表示して終了する.
# options
debug             = ログレベルを debug にする.
info              = ログレベルを info にする.
warn              = ログレベルを warn にする.
quiet             = error のみログ出力する.
basedir           = ベースディレクトリ.
output-directory  = 出力ディレクトリ.
overwrite         = 既存のファイルを上書きする.
dryrun            = リモートオペレーションをスキップする.
announcer-name    = announcerの名称.
distribution-name = ディストリビューションの名称.
tool-name         = toolの名称.
# errors
ERROR_trace_file_init  = traceファイルを初期化できませんでした
ERROR_unexpected_error = 予期せぬエラー

###############################################################################
# Shared - AbstractModelCommand
###############################################################################
# options
config-file     = この設定ファイル.
git-root-search = Gitルートを検索する.
system-property = システムプロパティを設定する.複数設定可能.
set-property    = プロパティの値を設定する.複数設定可能.
# text
TEXT_config_file = {} で設定します
TEXT_basedir_set = - ベースディレクトリが [} に設定されました
# errors
ERROR_missing_config_file     = 必要なオプション: '--config-file=<configFile>' またはjreleaser[{}]という名前のローカルファイルがありません 
ERROR_missing_required_option = 必要なオプションがありません: '{}'
ERROR_invalid_config_format   = 不正な設定フォーマット: {}
ERROR_invalid_property        = 不正なプロパティ '{}'

###############################################################################
# Shared - AbstractPlatformAwareModelCommand
###############################################################################
# options
select-current-platform = 現在のプラットフォームにマッチするパスをアクティベート.
select-platform         = 指定したプラットフォームにマッチするパスをアクティベート.複数設定可能.

###############################################################################
 # Announce
###############################################################################
# header
jreleaser.announce.usage.headerHeading =
jreleaser.announce.usage.header        = リリースをアナウンスする.

###############################################################################
# Assemble
###############################################################################
# header
jreleaser.assemble.usage.headerHeading =
jreleaser.assemble.usage.header        = ディストリビューションをアセンブル.
jreleaser.assemble.assembler-name      = アセンブラの名前.

###############################################################################
# Changelog
###############################################################################
# header
jreleaser.changelog.usage.headerHeading =
jreleaser.changelog.usage.header        = changelogを算出.

###############################################################################
# Checksum
###############################################################################
# header
jreleaser.checksum.usage.headerHeading =
jreleaser.checksum.usage.header        = チェックサムを算出.

###############################################################################
# Config
###############################################################################
# header
jreleaser.config.usage.headerHeading =
jreleaser.config.usage.header        = 現在の設定を表示.
# options
jreleaser.config.full                = 設定を全て表示.
jreleaser.config.assembly            = アセンブリ設定を表示.

###############################################################################
# FullRelease
###############################################################################
# header
jreleaser.full-release.usage.headerHeading =
jreleaser.full-release.usage.header        = フルリリースを実行.

###############################################################################
# Init
###############################################################################
# header
jreleaser.init.usage.headerHeading =
jreleaser.init.usage.header        = jreleaser設定ファイルを作成.
# options
jreleaser.init.format              = 設定ファイルフォーマット.
# text
jreleaser.init.TEXT_writing_file   = ファイルを書き出し中: {}
jreleaser.init.TEXT_success        = JReleaserは {} で初期化されました
# errors
jreleaser.init.ERROR_invalid_format = サポートされないファイルフォーマットです. [{}] のいずれかである必要があります
jreleaser.init.ERROR_file_exists    = ファイル {} が存在しますが、上書きが false に設定されています.

###############################################################################
# Package
###############################################################################
# header
jreleaser.package.usage.headerHeading =
jreleaser.package.usage.header        = 全てのディストリビューションをパッケージする.

###############################################################################
# Prepare
###############################################################################
# header
jreleaser.prepare.usage.headerHeading =
jreleaser.prepare.usage.header        = 全てのディストリビューションを用意する.

###############################################################################
# Publish
###############################################################################
# header
jreleaser.publish.usage.headerHeading =
jreleaser.publish.usage.header        = 全てのディストリビューションをパブリッシュする.

###############################################################################
# Release
###############################################################################
# header
jreleaser.release.usage.headerHeading =
jreleaser.release.usage.header        = リリースを作成または更新する.
jreleaser.release.auto-config.header  = %n自動設定オプション:%n
# options
jreleaser.release.auto-config                     = 自動設定をアクティベート.
jreleaser.release.project-name                    = プロジェクトのname.
jreleaser.release.project-version                 = プロジェクトのversion.
jreleaser.release.project-version-pattern         = プロジェクトのversionパターン.
jreleaser.release.project-snapshot-pattern        = プロジェクトのsnapshotパターン.
jreleaser.release.project-snapshot-label          = プロジェクトのsnapshotラベル.
jreleaser.release.project-snapshot-full-changelog = 前回の非snapshotリリース以降の全changelogを算出.
jreleaser.release.tag-name                        = releaseタグ.
jreleaser.release.previous-tag-name               = 前回のreleaseタグ.
jreleaser.release.release-name                    = release名.
jreleaser.release.milestone-name                  = milestone名.
jreleaser.release.prerelease                      = リリースがプレリリースの場合.
jreleaser.release.prerelease-pattern              = プレリリースのパターン.
jreleaser.release.draft                           = リリースがドラフトの場合.
jreleaser.release.overwrite                       = 既存のリリースを上書き.
jreleaser.release.update                          = 既存のリリースをアップデート.
jreleaser.release.update-section                  = アップデートするリリースセクション.複数設定可能.
jreleaser.release.skip-tag                        = このリリースのタグ付けをスキップする.
jreleaser.release.skip-release                    = リリースの作成をスキップする.
jreleaser.release.branch                          = リリースブランチ.
jreleaser.release.changelog                       = changelogファイルのパス.
jreleaser.release.changelog-formatted             = Format generated changelog.
jreleaser.release.username                        = Gitユーザー名.
jreleaser.release.commit-author-name              = Commit author名.
jreleaser.release.commit-author-email             = Commit authorメールアドレス.
jreleaser.release.signing-enabled                 = ファイルを署名.
jreleaser.release.signing-armored                 = ASCII Armored formatで署名を生成.
jreleaser.release.file                            = アップロードするインプットファイル.複数設定可能.
jreleaser.release.glob                            = globでアップロードするインプットファイル. 複数設定可能.

###############################################################################
# Sign
###############################################################################
# header
jreleaser.sign.usage.headerHeading =
jreleaser.sign.usage.header        = リリースアーティファクトを署名.

###############################################################################
# Template
###############################################################################
# header
jreleaser.template.usage.headerHeading =
jreleaser.template.usage.header        = tool/announcerテンプレートを生成.
jreleaser.template.announcer.header    = announcerテンプレート%n
jreleaser.template.tool.header         = toolテンプレート%n
# options
jreleaser.template.distribution-type   = ディストリビューションのタイプ.%nデフォルトは JAVA_BINARY.
jreleaser.template.snapshot            = スナップショットテンプレートを使う.
# text
jreleaser.template.TEXT_success        = テンプレートが {} で生成されました

###############################################################################
# Upload
###############################################################################
# header
jreleaser.upload.usage.headerHeading =
jreleaser.upload.usage.header        = 全てのアーティファクトをアップロード.
# options
jreleaser.upload.uploader-type       = アップローダーのタイプ.
jreleaser.upload.uploader-name       = アップローダーの名前.