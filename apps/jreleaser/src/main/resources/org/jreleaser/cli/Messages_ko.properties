#
# SPDX-License-Identifier: Apache-2.0
#
# Copyright 2020-2022 The JReleaser authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

###############################################################################
# Shared
###############################################################################
# header
usage.headerHeading      = JReleaser는 Java 프로젝트를 위한 릴리스 자동화 도구입니다.%n
jreleaser.usage.header.0 = 사용자 정의 가능한 옵션을 제공하면서
jreleaser.usage.header.1 = 여러 패키지 관리자로 릴리스 생성 및 아티팩트 게시를
jreleaser.usage.header.2 = 단순화하는 것이 목표입니다.
usage.synopsisHeading    = %n사용법:\u0020
usage.optionListHeading  = %n옵션:%n
usage.commandListHeading = %n명령어:%n
usage.footerHeading      = %n문서는 https://jreleaser.org에서 찾을 수 있습니다.%n
helpCommand.command      = 명령어
help                     = 도움말 메시지를 표시하고 종료.
version                  = 버전 정보를 출력하고 종료.
filter.header            = %n필터:%n
include.filter.header    = %n필터 포함:%n
exclude.filter.header    = %n필터 제외:%n
# options
debug             = 로그 수준을 debug로 설정.
info              = 로그 수준을 info로 설정.
warn              = 로그 수준을 warn로 설정.
quiet             = error 로그만 출력.
basedir           = 기본 디렉토리.
output-directory  = 출력 디렉토리.
overwrite         = 기존 파일 덮어쓰기.
dry-run           = 원격 작업 건너뜀.
announcer             = announcer 포함. 반복 가능.
exclude-announcer     = announcer 제외. 반복 가능.
assembler             = assembler 포함. 반복 가능.
exclude-assembler     = assembler 제외. 반복 가능.
packager              = packager 포함. 반복 가능.
exclude-packager      = packager 제외. 반복 가능.
distribution          = distribution 포함. 반복 가능.
exclude-distribution  = distribution 제외. 반복 가능.
uploader              = uploader 유형으로 포함. 반복 가능.
exclude-uploader      = uploader 유형으로 제외. 반복 가능.
uploader-name         = uploader 이름으로 포함. 반복 가능.
exclude-uploader-name = uploader 이름으로 제외. 반복 가능.
# errors
ERROR_trace_file_init  = trace 파일을 초기화 할 수 없습니다.
ERROR_unexpected_error = 예기치 않은 오류

###############################################################################
# Shared - AbstractModelCommand
###############################################################################
# options
config-file     = 설정 파일.
git-root-search = Git root 검색.
system-property = 시스템 속성을 설정. 반복 가능.
set-property    = 속성 값 설정. 반복 가능.
# text
TEXT_config_file = {}로 설정
TEXT_basedir_set = - {}을 기본 경로로 설정.
# errors
ERROR_missing_config_file     = 필수 옵션 누락: '--config-file=<configFile>' 혹은 jreleaser[{}]이름의 로컬 파일이 없음.
ERROR_missing_required_option = 필수 옵션 누락: '{}'
ERROR_invalid_config_format   = 잘못된 설정 포맷: {}
ERROR_invalid_property        = 잘못된 속성 '{}'

###############################################################################
# Shared - AbstractPlatformAwareModelCommand
###############################################################################
# options
select-current-platform = 현재 플랫폼과 일치하는 경로를 활성화.
select-platform         = 주어진 플랫폼과 일치하는 경로를 활성화. 반복가능.


###############################################################################
 # Announce
###############################################################################
# header
jreleaser.announce.usage.headerHeading =
jreleaser.announce.usage.header        = release 발표


###############################################################################
# Assemble
###############################################################################
# header
jreleaser.assemble.usage.headerHeading =
jreleaser.assemble.usage.header        = Assemble distributions.

###############################################################################
# Changelog
###############################################################################
# header
jreleaser.changelog.usage.headerHeading =
jreleaser.changelog.usage.header        = changelog 산출.


###############################################################################
# Checksum
###############################################################################
# header
jreleaser.checksum.usage.headerHeading =
jreleaser.checksum.usage.header        = checksum 계산.

###############################################################################
# Config
###############################################################################
# header
jreleaser.config.usage.headerHeading =
jreleaser.config.usage.header        = 현재 설정 표시.
# options
jreleaser.config.full                = 전체 설정 표시.
jreleaser.config.assembly            = assembly 설정 표시.

###############################################################################
# FullRelease
###############################################################################
# header
jreleaser.full-release.usage.headerHeading =
jreleaser.full-release.usage.header        = 전체 release 수행.

###############################################################################
# Init
###############################################################################
# header
jreleaser.init.usage.headerHeading =
jreleaser.init.usage.header        = jreleaser 설정 파일 생성.
# options
jreleaser.init.format              = 파일 포맷 설정.
# text
jreleaser.init.TEXT_writing_file   = {} 파일 쓰는 중
jreleaser.init.TEXT_success        = {} 으로 JReleaser 초기화 됨.
# errors
jreleaser.init.ERROR_invalid_format = 지원하지 않는 파일 포맷. [{}] 중 하나여야 함.
jreleaser.init.ERROR_file_exists    = 이미 {} 파일이 존재하고, 덮어쓰기가 false로 설정됨.


###############################################################################
# Package
###############################################################################
# header
jreleaser.package.usage.headerHeading =
jreleaser.package.usage.header        = 모든 배포 패키지 생성.

###############################################################################
# Prepare
###############################################################################
# header
jreleaser.prepare.usage.headerHeading =
jreleaser.prepare.usage.header        = 모든 배포 준비

###############################################################################
# Publish
###############################################################################
# header
jreleaser.publish.usage.headerHeading =
jreleaser.publish.usage.header        = 모든 배포를 게시.

###############################################################################
# Release
###############################################################################
# header
jreleaser.release.usage.headerHeading =
jreleaser.release.usage.header        = release 생성 혹은 업데이트.

jreleaser.release.auto-config.header  = %nAuto Config Options:%n
# options
jreleaser.release.auto-config                     = 자동 설정 활성화.
jreleaser.release.project-name                    = 프로젝트 이름.
jreleaser.release.project-version                 = 프로젝트 버전.
jreleaser.release.project-version-pattern         = 프로젝트 버전 패턴.
jreleaser.release.project-snapshot-pattern        = 프로젝트 스냅샷 패턴.
jreleaser.release.project-snapshot-label          = 프로젝트 스냅샷 라벨
jreleaser.release.project-snapshot-full-changelog = 스냅샷 되지 않은 마지막 release 이후부터, 전체 changelog 산출.

jreleaser.release.tag-name                        = release 태그.
jreleaser.release.previous-tag-name               = 이전 release 태그.
jreleaser.release.release-name                    = release 이름.
jreleaser.release.milestone-name                  = 마일스톤 이름.
jreleaser.release.prerelease                      = 사전 release인 경우.
jreleaser.release.prerelease-pattern              = 사전 release 패턴.
jreleaser.release.draft                           = 초안 release인 경우.
jreleaser.release.overwrite                       = 기존 release 덮어쓰기.
jreleaser.release.update                          = 기존 release 업데이트.
jreleaser.release.update-section                  = 업데이트할 release 섹션. 반복 가능.
jreleaser.release.skip-tag                        = release에 태그 지정을 건너뜀.
jreleaser.release.skip-release                    = release 생성을 건너뜀.
jreleaser.release.branch                          = release 브랜치.
jreleaser.release.changelog                       = changelog 파일 경로.
jreleaser.release.changelog-formatted             = changelog 포맷.
jreleaser.release.username                        = Git 사용자 이름.
jreleaser.release.commit-author-name              = Commit 작성자 이름.
jreleaser.release.commit-author-email             = Commit 작성자 이메일.

jreleaser.release.signing-enabled                 = 파일 서명.
jreleaser.release.signing-armored                 = ascii armored 서명 생성.
jreleaser.release.file                            = 업로드할 파일 입력. 반복 가능
jreleaser.release.glob                            = 업로드할 파일 입력(glob). 반복 가능

###############################################################################
# Sign
###############################################################################
# header
jreleaser.sign.usage.headerHeading =
jreleaser.sign.usage.header        = release 아티팩트 서명.


###############################################################################
# Template
###############################################################################
# header
jreleaser.template.usage.headerHeading =
jreleaser.template.usage.header        = packager/announcer 템플릿 생성.
jreleaser.template.announcer.header    = %nAnnouncer 템플릿%n
jreleaser.template.packager.header     = %nPackager 템플릿%n
# options
jreleaser.template.distribution-type   = 배포 종류.%n기본값은 JAVA_BINARY.
jreleaser.template.distribution        = 배포 이름.

jreleaser.template.packager            = packager의 이름.
jreleaser.template.announcer           = announcer의 이름.
jreleaser.template.snapshot            = 스냅샷 템플릿 사용.
# text
jreleaser.template.TEXT_success        = {} 에서 생성된 템플릿

###############################################################################
# Upload
###############################################################################
# header
jreleaser.upload.usage.headerHeading =
jreleaser.upload.usage.header        = 모든 아티팩트 업로드.

###############################################################################
# Json-Schema
###############################################################################
# header
jreleaser.json-schema.usage.headerHeading =
jreleaser.json-schema.usage.header        = JSON schema 생성.