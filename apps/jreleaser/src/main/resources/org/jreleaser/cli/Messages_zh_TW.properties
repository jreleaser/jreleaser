#
# SPDX-License-Identifier: Apache-2.0
#
# Copyright 2020-2021 The JReleaser authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

###############################################################################
# Shared
###############################################################################
# header
usage.headerHeading      = JReleaser 是 Java 項目的發布自動化工具.%n
jreleaser.usage.header.0 = 它的目標是在提供可定制選項的同時，
jreleaser.usage.header.1 = 簡化創建發布的過程  
jreleaser.usage.header.2 = 支持多個包管理器發布工件。
usage.synopsisHeading    = %n用法:\u0020
usage.optionListHeading  = %n選項:%n
usage.commandListHeading = %n指令:%n
usage.footerHeading      = %n說明書在 https://jreleaser.org%n
helpCommand.command      = 指令
help                     = 顯示幫助消息之後退出.
version                  = 打印版本信息之後退出.
filter.header            = %n過濾:%n
include.filter.header    = %n包括 過濾:%n
exclude.filter.header    = %n排除 過濾:%n
# options
debug             = 設置日誌級別為 debug.
info              = 設置日誌級別為 info.
warn              = 設置日誌級別為 warn.
quiet             = 僅記錄 errors.
basedir           = 基本目錄.
output-directory  = 輸出目錄.
overwrite         = 覆蓋現有文件.
dryrun            = 跳過遠程操作.
announcer             = 添加廣播器. 可重複.
exclude-announcer     = 排除廣播器. 可重複.
assembler             = 添加彙編器. 可重複.
exclude-assembler     = 排除彙編器. 可重複.
packager              = 添加包裝器. 可重複.
exclude-packager      = 排除包裝器. 可重複.
distribution          = 添加分配. 可重複.
exclude-distribution  = 排除分配. 可重複.
uploader              = 按類型添加上傳器. 可重複.
exclude-uploader      = 按類型排除上傳器. 可重複.
uploader-name         = 按名稱添加上傳器. 可重複.
exclude-uploader-name = 按名稱排除上傳器. 可重複.
# errors
ERROR_trace_file_init  = 無法初始化跟踪文件
ERROR_unexpected_error = 無法理解的錯誤

###############################################################################
# Shared - AbstractModelCommand
###############################################################################
# options
config-file     = 配置文件.
git-root-search = 搜索 Git 目錄根.
system-property = 設置系統屬性. 可重複.
set-property    = 設置屬性值. 可重複.
# text
TEXT_config_file = 配置器 {}
TEXT_basedir_set = - 基本目錄設置為 {}
# errors
ERROR_missing_config_file     = 缺少必需的選項: '--config-file=<configFile>' 或本地文件命名 jreleaser[{}]
ERROR_missing_required_option = 缺少必需的選項: '{}'
ERROR_invalid_config_format   = 錯誤的配置格式: {}
ERROR_invalid_property        = 錯誤的屬性 '{}'

###############################################################################
# Shared - AbstractPlatformAwareModelCommand
###############################################################################
# options
select-current-platform = 激活與當前平台匹配的路徑.
select-platform         = 激活與給定平台匹配的路徑. 可重複.

###############################################################################
# Announce
###############################################################################
# header
jreleaser.announce.usage.headerHeading =
jreleaser.announce.usage.header        = 宣布發布.

###############################################################################
# Assemble
###############################################################################
# header
jreleaser.assemble.usage.headerHeading =
jreleaser.assemble.usage.header        = 組裝發行版.

###############################################################################
# Changelog
###############################################################################
# header
jreleaser.changelog.usage.headerHeading =
jreleaser.changelog.usage.header        = 計算變更日誌.

###############################################################################
# Checksum
###############################################################################
# header
jreleaser.checksum.usage.headerHeading =
jreleaser.checksum.usage.header        = 計算校驗和數據.

###############################################################################
# Config
###############################################################################
# header
jreleaser.config.usage.headerHeading =
jreleaser.config.usage.header        = 顯示當前配置.
# options
jreleaser.config.full                = 顯示完整配置.
jreleaser.config.assembly            = 顯示組件配置.

###############################################################################
# FullRelease
###############################################################################
# header
jreleaser.full-release.usage.headerHeading =
jreleaser.full-release.usage.header        = 執行完整發布.

###############################################################################
# Init
###############################################################################
# header
jreleaser.init.usage.headerHeading =
jreleaser.init.usage.header        = 創建一個 jreleaser 配置文件.
# options
jreleaser.init.format              = 配置文件格式.
# text
jreleaser.init.TEXT_writing_file   = 輸出文件 {}
jreleaser.init.TEXT_success        = JReleaser 初始化於 {}
# errors
jreleaser.init.ERROR_invalid_format = 不支持的文件格式。 必須是其中之一 [{}]
jreleaser.init.ERROR_file_exists    = 文件 {} 已存在並且覆蓋設置為 false.

###############################################################################
# Package
###############################################################################
# header
jreleaser.package.usage.headerHeading =
jreleaser.package.usage.header        = 打包所有發行版.

###############################################################################
# Prepare
###############################################################################
# header
jreleaser.prepare.usage.headerHeading =
jreleaser.prepare.usage.header        = 準備所有發行版.

###############################################################################
# Publish
###############################################################################
# header
jreleaser.publish.usage.headerHeading =
jreleaser.publish.usage.header        = 發布所有發行版.

###############################################################################
# Release
###############################################################################
# header
jreleaser.release.usage.headerHeading =
jreleaser.release.usage.header        = 創建或更新版本.
jreleaser.release.auto-config.header  = %n自動配置選項:%n
# options
jreleaser.release.auto-config                     = 激活自動配置.
jreleaser.release.project-name                    = 項目名稱.
jreleaser.release.project-version                 = 項目版本.
jreleaser.release.project-version-pattern         = 項目版本模式.
jreleaser.release.project-snapshot-pattern        = 項目快版本模式.
jreleaser.release.project-snapshot-label          = 項目快版本標籤.
jreleaser.release.project-snapshot-full-changelog = 計算自上次非快版本以來的完整變更日誌.
jreleaser.release.tag-name                        = 發布標籤.
jreleaser.release.previous-tag-name               = 上個版本標籤.
jreleaser.release.release-name                    = 版本名稱.
jreleaser.release.milestone-name                  = 里程碑名稱.
jreleaser.release.prerelease                      = 如果是預發行版.
jreleaser.release.prerelease-pattern              = 預發布模式.
jreleaser.release.draft                           = 如果是草稿.
jreleaser.release.overwrite                       = 覆蓋現有版本.
jreleaser.release.update                          = 更新現有版本.
jreleaser.release.update-section                  = 發布部分待更新. 可重複.
jreleaser.release.skip-tag                        = 跳過標記版本.
jreleaser.release.skip-release                    = 跳過創建發布.
jreleaser.release.branch                          = 發布分支.
jreleaser.release.changelog                       = 更改日誌文件的路徑.
jreleaser.release.changelog-formatted             = 格式化變更日誌.
jreleaser.release.username                        = Git 用戶名.
jreleaser.release.commit-author-name              = 提交作者姓名.
jreleaser.release.commit-author-email             = 提交作者電子郵箱.
jreleaser.release.signing-enabled                 = 簽署文件.
jreleaser.release.signing-armored                 = 生成 ascii 裝甲簽名.
jreleaser.release.file                            = 要上傳的輸入文件. 可重複.
jreleaser.release.glob                            = 要上傳的輸入文件 (作為 glob). 可重複.

###############################################################################
# Sign
###############################################################################
# header
jreleaser.sign.usage.headerHeading =
jreleaser.sign.usage.header        = 簽署發布工件.

###############################################################################
# Template
###############################################################################
# header
jreleaser.template.usage.headerHeading =
jreleaser.template.usage.header        = 生成打包器/廣播器模板.
jreleaser.template.announcer.header    = %n廣播器模板%n
jreleaser.template.packager.header     = %n打包器模板%n
# options
jreleaser.template.distribution-type   = 分佈類型.%n默認值是 JAVA_BINARY.
jreleaser.template.distribution        = 分佈名.
jreleaser.template.packager            = 包裝器名.
jreleaser.template.announcer           = 廣播器名.
jreleaser.template.snapshot            = 使用快板模板.
# text
jreleaser.template.TEXT_success        = 模板生成於 {}

###############################################################################
# Upload
###############################################################################
# header
jreleaser.upload.usage.headerHeading =
jreleaser.upload.usage.header        = 上傳所有工件.
