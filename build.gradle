/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * Copyright 2020-2021 The JReleaser authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
config {
    info {
        description = 'jreleaser'
        inceptionYear = '2020'
        tags = ['release']

        links {
            website      = "https://github.com/jreleaser/${project.rootProject.name}"
            issueTracker = "https://github.com/jreleaser/${project.rootProject.name}/issues"
            scm          = "https://github.com/jreleaser/${project.rootProject.name}.git"
        }

        scm {
            url                 = "https://github.com/jreleaser/${project.rootProject.name}"
            connection          = "scm:git:https://github.com/jreleaser/${project.rootProject.name}.git"
            developerConnection = "scm:git:git@github.com:jreleaser/${project.rootProject.name}.git"
        }

        specification {
            enabled = true
        }

        implementation {
            enabled = true
        }
    }

    docs {
        javadoc {
            autoLinks {
                enabled = false
            }
        }
    }
}

allprojects {
    repositories {
        gradlePluginPortal()
        mavenLocal()
    }

    tasks.withType(GenerateModuleMetadata) {
        enabled = false
    }
}

subprojects {
    config {
        info {
            description = project.project_description
        }
    }

    license {
        exclude('build/**')
        exclude('**/*.tpl')
    }

    dependencies {
        testImplementation "org.junit.jupiter:junit-jupiter:$junitVersion"
        testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
        testImplementation "org.hamcrest:hamcrest-library:$hamcrestVersion"

        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    }

    test {
        useJUnitPlatform()
    }
}