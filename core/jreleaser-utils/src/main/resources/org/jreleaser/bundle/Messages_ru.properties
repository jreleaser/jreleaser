#
# SPDX-License-Identifier: Apache-2.0
#
# Copyright 2020-2021 The JReleaser authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

###############################################################################
# TRANSLATIONS NOTES:
# - please respect the capitalization of the first word
# - DSL property names must remain as is, e.g, 'basedir'
# - do not translate 'false', 'true'
###############################################################################

да = да
нет = нет
not = не

ERROR_unexpected_error = Неожиданная ошибка

ERROR_context_creator_parse_configuration = Неожиданная ошибка при анализе конфигурации из {}
context.creator.reading_configuration = Чтение конфигурации
context.creator.report.project-version = Версия проекта установлена на {}
context.creator.report.release = Релиз - это {} снэпшот
context.creator.report.timestamp = Отметка времени: {}
context.creator.report.head = HEAD находится в {}
context.creator.report.platform = Платформа {}
context.configurer.auto-config.on = Автоконфигурация включена

context.configurer.basedir.set = - basedir установлен на {}
ERROR_context_configurer_unsupported_url = Автоконфигурация не поддерживает {}

ERROR_context_configurer_update_not_set = release.updateSections установлен, но release.update имеет значение false
ERROR_context_configurer_fail_git_head = Не удалось определить git HEAD
ERROR_context_configurer_fail_git_remote = Не удалось определить remote
ERROR_context_configurer_jreleaser_misconfigured = JReleaser неправильно настроен.
ERROR_context_configurer_detected_git = Автоматическая настройка обнаружена {}, но проект настроен {}
ERROR_version_parse = Невозможно проанализировать версию '{}'
ERROR_unsupported_algorithm = Неподдерживаемый алгоритм {}

announcers.header = Диктор о выпуске
announcers.not.enabled = Диктор не включен. Пропуск.
announcers.not.configured = Дикторы не настроены. Пропуск.
announcers.announcer.not.found = Диктор {} не найден. Пропуск.
announcers.announcer.not.enabled = Диктор {} не включен. Пропуск.
announcers.announcer.excluded = Диктор {} исключен. Пропуск.
announcers.announcer.disabled = отключено. Пропуск.
ERROR_unsupported_announcer = Неподдерживаемый диктор {}
ERROR_announcer_not_configured = Диктор {} не настроен

assemblers.not.enabled = Сборка не разрешена. Пропуск
assemblers.no.match = Нет подходящих ассемблеров {}
assemblers.distribution.not.configured = Дистрибуция {} не настроено для сборки с {}
assemblers.assemble.distribution.with = Сборка {} дистрибутива с {}
assemblers.assemble.distribution.with.all = Сборка {} дистрибутива со всеми ассемблерами
assemblers.assemble.all.distributions.with = Сборка всех дистрибутивов с помощью {}
assemblers.assemble.all.distributions = Сборка всех дистрибутивов
assemblers.distribution.skip = пропуск для {} дистрибутива
assemblers.distribution.assemble = сборка {} дистрибутива
assemblers.assembler.excluded = Ассемблер {}: {} был исключен. Пропуск.
ERROR_unsupported_assembler = Неподдерживаемый ассемблер {}

ERROR_unexpected_error_changelog = Неожиданная ошибка при создании журнала изменений
ERROR_cannot_read_changelog = Невозможно прочитать журнал изменений из {}
ERROR_path_can_not_resolve = Не удается разрешить путь {}

checksum.header = Расчет контрольных сумм
checksum.not.enabled = Нет файлов, настроенных для контрольной суммы. Пропуск
checksum.not.exist = контрольная сумма не существует: {}
checksum.file.newer = {} новее, чем {}
checksum.reading = чтение {}
ERROR_unexpected_error_checksum = Неожиданная ошибка записи контрольных сумм в {}
ERROR_artifact_does_not_exist = Артефакт не существует. {}
ERROR_unexpected_error_hash_read = Неожиданная ошибка при чтении хэша из {}
ERROR_unexpected_error_calculate_checksum = Неожиданная ошибка при вычислении контрольной суммы для {}

packagers.packager.excluded = упаковщик {} был исключен. Пропуск
distributions.distribution.excluded = дистрибутив {} был исключен. Пропуск
distributions.not.enabled = Нет активных дистрибутивов для {}. Пропуск
distributions.no.match = Дистрибутив {} не существует
distributions.apply.action = {} дистрибутивов
distributions.apply.action.to = - {} {} дистрибутивов
distributions.skip.distribution = пропуск для {} дистрибуции
distributions.not.supported.distribution = дистрибутив {} с типом {} не поддерживается. Пропуск.
distributions.action.preparing.capitalize = Подготовка
distributions.action.packaging.capitalize = Упаковка
distributions.action.publishing.capitalize = Публикация
distributions.action.preparing = подготовка
distributions.action.packaging = упаковка
distributions.action.publishing = публикация
distributions.apply.action.distribution = {} {} дистрибутив
distributions.failure = ошибка: {}
distributions.previous.failure = пропуск из-за предыдущего сбоя
ERROR_unsupported_packager = Неподдерживаемый упаковщик {}

ERROR_releaser_no_match = Не настроен подходящий выпуск git

signing.header = Подписывание файлов
signature.not.enabled = Подписание не включено. Пропуск
signing.no.match = Нет файлов, настроенных для подписи. Пропуск
signing.up.to.date = Все подписи актуальны и действительны. Пропуск
signature.verify.signatures = проверка {} подписей
signing.signing.files = подписание {} файлов в {}
signature.signature.not.exist = подпись не существует: {}
signature.file.newer = {} новее, чем {}
ERROR_signing_verify_file = Не удалось проверить файл {} с подписью {}
ERROR_signing_verify_signature = Ошибка при проверке подписи {}
ERROR_signing_create_signature_dir = Не удалось создать директорию подписей
ERROR_unexpected_error_signature_gen = Неожиданная ошибка при инициализации генератора подписи
ERROR_unexpected_error_signing = Неожиданная ошибка при подписании
ERROR_public_key_not_found = Не удалось найти открытый ключ для подписи

uploaders.not.enabled = Загрузка не разрешена. Пропуск
uploaders.no.match = Нет совпадающих загрузчиков {}
uploaders.uploader.not.configured = Загрузчик {} / {} не настроен
uploaders.uploader.not.configured2 = Загрузчик {} не настроен
uploaders.upload.with = Загрузка с помощью {} / {}
uploaders.upload.all.artifacts.with = Загрузка всех артефактов с помощью {}
uploaders.upload.all.artifacts.to = Загрузка всех артефактов в {}
uploaders.upload.all.artifacts = Загрузка всех артефактов
uploaders.skip.upload = пропуск загрузки для {0
uploaders.upload.to = загрузка в {}
uploaders.uploader.excluded = Загрузчик {}: {} был исключен. Пропуск
uploaders.uploader.disabled = Загрузчик {}: {} не включен. Пропуск
ERROR_unsupported_uploader = Неподдерживаемый загрузчик {}

tool.publish.snapshot.not.supported = публикация снимков не разрешена. Пропуск.
tool.create.properties = создание параметра для {} / {}
tool.skip.distribution = пропуск {} раздачи
ERROR_copy_files_from_to = Не удалось скопировать файлы из {} в {}
ERROR_unexpected_copy_files_from_to = Неожиданная ошибка при копировании файлов из {} в {}
tool.no.matching.artifacts = в дистрибутиве не найдено подходящих артефактов {} для упаковки с {}
tool.fill.distribution.properties = заполнение свойств распределения в props
tool.fill.git.properties = заполнение свойств git в props
tool.fill.artifact.properties = заполнение свойств артефакта в props
tool.fill.tool.properties = заполнение свойств инструмента в props
tool.resolve.templates = разрешение шаблонов для {} / {}
tool.evaluate.template = шаблон оценки {} для {} / {}
tool.write.template = шаблон записи {} для {} / {}
tool.write.file = запись файла {} для {} / {}
tool.copy.license = копирование файлов лицензий

ERROR_brew_multiplatform_artifacts = Нет подходящих многоплатформенных двоичных файлов
ERROR_tool_requires_platform = должен работать на {}
ERROR_tool_excludes_platform = не должен работать на {}
ERROR_tool_local_build_unsupported = локальная сборка еще не поддерживается
ERROR_tool_local_publication_unsupported = локальная публикация еще не поддерживается
dryrun.set = dryrun имеет значение true. Пропуск
docker.no.registries = нет настроенных реестров. Пропуск
docker.login = войдите в {} {}
docker.tag = пометка {} как {}
docker.push = пуш {} на {} {}
docker.logout = выйти из системы {} {}
sdkman.no.artifacts.match = Артефакт {} не подходит для публикации Sdkman. Пропуск
sdkman.artifact.explicit.skip = Артефакт {} явно пропускается
sdkman.platform.replacement = Platform {}: {} заменит {}
sdkman.publish.major = публикация основного выпуска кандидата '{}'
sdkman.publish.minor = публикация второстепенного выпуска кандидата '{}'
ERROR_project_no_license_url = Проект не определяет значение для licenseUrl

assembler.fill.assembler.properties = заполнение свойств ассемблера в props
ERROR_unexpected_error_writing_file = Неожиданная ошибка при записи в {}
ERROR_command_execution_exit_value = Ошибка выполнения команды. exitValue = {}
assembler.jlink.jdk = версия jdk: {} {}
assembler.jlink.target = целевая версия: {} {}
ERROR_jlink_target_not_compatible = Целевой JDK {} несовместим с {}
assembler.copy.jars = копирование JAR в {}
assembler.copy.files = копирование файлов в {}
ERROR_assembler_delete_archive = Не удалось удалить предыдущий архив {}
assembler.resolved.module.names = разрешенные имена модулей: {}
assembler.module.names = moduleNames: {}
ERROR_assembler_no_module_names = Не удалось разрешить имена модулей
ERROR_assembler_jdeps_error = Произошла ошибка при выполнении jdeps: \ n {}
ERROR_assembler_delete_image = Не удалось удалить предыдущее изображение {}
ERROR_assembler_copy_jars = Не удалось скопировать JAR в {}
ERROR_assembler_copy_launcher = Не удалось скопировать программу запуска в {}
ERROR_assembler_invalid_jdk_release = Недействительный файл выпуска JDK {} не найден
ERROR_assembler_invalid_jdk_release_file = Недействительный файл выпуска JDK {}
assembler.copying = копирование {}
ERROR_assembler_copying_jars = Неожиданная ошибка при копировании файлов JAR
ERROR_assembler_copying_files = Неожиданная ошибка при копировании файлов
ERROR_assembler_create_directories = Не удалось создать директории
assembler.graal.java = версия java: {} {}
assembler.graal.graal = версия graal: {} {}
assembler.graal.install.native.exec = установка исполняемого файла образа в машинном коде
ERROR_assembler_invalid_graal_release = Недействительный файл релиза Graal {} не найден
ERROR_assembler_invalid_graal_release_file = Недействительный файл релиза Graal {}

ERROR_invalid_config_file = Неверный файл конфигурации. {}
ERROR_parsing_config_file = Неожиданная ошибка при анализе файла конфигурации. {}
ERROR_load_resource = Неожиданная ошибка загрузки ресурса. {}
ERROR_unsupported_config_format = Неподдерживаемый формат конфигурации. {}

releaser.tag.and.release.skipped = Релиз и тег пропущены

artifacts.not.exists = артефакт не существует: {}
artifacts.newer = {} новее, чем {}
ERROR_artifacts_unexpected_error_copying = Неожиданная ошибка при копировании {} в {}
ERROR_artifacts_glob_resolution = Некоторые glob не удалось разрешить
ERROR_artifacts_unexpected_error_globs = Неожиданная ошибка при разрешении глобусов
ERROR_artifacts_unexpected_error_path = Неожиданная ошибка при посещении пути {}

validation_must_define_pattern = {} должен определять шаблон
validation_must_not_be_blank = {} не должно быть пустым
validation_must_not_be_null = {} не должно быть нулевым
validation_is_null = {} имеет значение null
validation_is_empty = {} пусто
validation_is_missing = {} отсутствует
validation_directory_not_exist = {} не существует: {}
validation_is_not_a_directory = {} не является директория: {}
validation_directory_is_empty = {} пусто: {}
validation_must_not_be_empty = {} не должно быть пустым
validation_value_cannot_be = {} не может быть {}
validation_multiple_assemblers = {} имеет более 1 ассемблера: {}
validation_brew_multiple_artifact = {} имеет более одного {} артефакта
validation_brew_single_artifact = {} может иметь только один соответствующий артефакт .dmg, .pkg или .zip
validation_brew_duplicate_definition = {} определен для более чем одного распределения: {}
validation_discussions_enabled = обсуждения могут использоваться только при выпуске на GitHub
validation_distributions_java = {} установлен в {}, но ни {}, ни {} не были установлены
validation_distributions_multiple = {} имеет более одного артефакта с {} платформой для расширения {}
validation_distributions_java_types = {} должен быть допустимым типом дистрибутива Java, одним из [{}]
validation_distributions_platform        = distribution.{}.artifact[{}].platform ({}) не поддерживается. \
  Please use `${name}` or `${name}-${arch}` from{}       name = {}{}       arch = {}
# keep these spaces ----------------------------->       <--------->       <------->
validation_distributions_platform_check = distribution. {} имеет тип {} и {} требует явной платформы для каждого артефакта
validation_distributions_disable = отключение дистрибутива. {}. {} из-за отсутствия соответствующих артефактов
validation_docker_no_registries = {} не определяет никаких реестров. Публикация изображений будет отключена
validation_git_signing = {} .sign имеет значение `true`, но блок подписи не включен
validation_git_required = {} или {} требуется
validation_changelog_multiple_categories = {} .changelog имеет более одной категории с заголовком: {}
validation_jbang_reverse_host = дистрибутив. {}. jbang должен определять дополнительное свойство с именем {}
validation_jbang_multiple_definition = jbang.alias {} определен для более чем одного распределения: {}
validation_missing_assembly = Отсутствуют выходные данные для {}. {}. Дистрибитив {} не собран
validation_archive_empty_fileset = архив. {} не определяет наборы файлов
validation_jlink_jdk_platform = jlink. {} определяет JDK без платформы
validation_jlink_jdk_multiple_platforms = jlink. {} имеет более одного JDK для {}
validation_jlink_platform = jlink. {}. targetJdk [{}]. platform ({}) не поддерживается. \
  Пожалуйста, используйте `$ {name}` или `$ {name} - $ {arch}` from {} name = {} {} arch = {}
validation_mail_not_blank = {} или {} не должно быть пустым
validation_packagers_docker_specs = docker.specs можно определять только внутри дистрибутивов
validation_release_no_providers = Поставщик выпуска не настроен
validation_release_requirement = Может быть включен только один из {}
validation_skdman_disable = Нет активных распределений. Отключение диктора Sdkman
validation_sdkman_multiple_definition = sdkman.candidate {} определен для более чем одного распределения: {}
validation_slack_token = должен быть предоставлен slack.token или slack.webhook

default_discussion_title = {{projectNameCapitalized}} {{projectVersion}} релизнут!!
default_release_message  = 🚀 {{projectNameCapitalized}} {{projectVersion}} релизнуть! {{releaseNotesUrl}}
default_category_feature = 🚀 Фичи
default_category_bug_fix = 🐛 Баг фиксы

ERROR_path_does_not_exist = Путь не существует. {}
ERROR_unexpected_error_reading_template = Неожиданная ошибка чтения шаблона {}
ERROR_tool_name_not_blank = Название инструмента не должно быть пустым
ERROR_tool_not_configured = Инструмент {} не был настроен
ERROR_packager_not_supported = Инструмент {} не поддерживается

environment.load.variables = Загрузка переменных из {}
environment.variables.load.error = Не удалось загрузить переменные из {}
environment.variables.source.missing = Источник переменных {} не существует

ERROR_unexpected_glob_resolve = Неожиданная ошибка при разрешении glob {}
ERROR_glob_resolve = Не удалось разрешить glob {}

context.platform.selection.active = Выбранная платформа действует
context.platform.selection.no.match = Следующие платформы не совпадают: {}
context.platform.selection.valid     = Пожалуйста, используйте `${name}` или `${name}-${arch}` from{}        name = {}{}        arch = {}
context.platform.selection.unmatched = Несравнимые платформы: {}
context.platform.selection.artifacts = Артефакты будут отфильтрованы по соответствию платформы: {}
context.configuration.validation = Проверка конфигурации
context.adjust.assemblies = настройка дистрибутивов с помощью сборок
context.writing.properties = Запись выходных свойств в {}
context.writing.properties.error = Не удалось записать выходные свойства в {}
ERROR_signing_init_keyring = Не удалось инициализировать связку ключей
ERROR_distribution_name_is_blank = Имя дистрибутива не должно быть пустым
ERROR_distribution_not_found = Дистрибутив {} не найден
ERROR_version_invalid = Версия {} не соответствует спецификации {}

templates.templates.resolve.classpath = разрешение шаблонов из пути к классам
templates.template.resolve.classpath = разрешение шаблона из пути к классам для {} @ {}
templates.search_matching_multiple = поиск соответствия шаблону {} *
templates.search_matching = поиск соответствия шаблону {}
templates.found = найденный шаблон {}
changelog.preset.not.found = Предварительная установка журнала изменений {} не найдена
ERROR_classpath_template_resolve = Не удалось найти расположение шаблонов пути к классам
ERROR_unexpected_reading_template_for = Неожиданная ошибка чтения шаблона для {} из {}
ERROR_unexpected_reading_templates_distribution = Неожиданная ошибка чтения шаблонов для дистрибуцции {} / {} из {}
ERROR_unexpected_reading_templates_from = Неожиданная ошибка чтения шаблонов из {}
ERROR_unexpected_reading_templates_announcer = Неожиданная ошибка чтения шаблонов для диктора {} из пути к классам
ERROR_template_not_found = Шаблон для {} @ {} не найден

templates.announcer.not.supported = Диктор {} не поддерживается
templates.create.directory = Создание директории вывода {}
templates.writing.file = Запись файла {}
templates.file_exists.error = Файл {} уже существует, и для перезаписи задано значение false
ERROR_unexpected_template_fail = Неожиданная ошибка при создании шаблона. distributionType = {}, distributionName = {}, toolName = {}

ERROR_environment_property_check = {} не может быть пустым. Настройте значение с помощью {}, или определите переменную среды {}, или определите пару ключ / значение в {} с помощью key = {}
ERROR_files_unpack_outside_target = Запись находится за пределами целевой директории: {}
ERROR_files_unpack_fail_dir = не удалось создать директорию {}
ERROR_files_copy = Невозможно скопировать: {}
ERROR_files_create = Невозможно создать: {}
ERROR_files_cycle = Цикл обнаружен: {}
ERROR_files_copy_attributes = Невозможно скопировать все атрибуты в: {}
ERROR_mustache_write_value = Не удалось записать значение:

ERROR_unexpected_release_announce = Неожиданная ошибка при объявлении релиза
ERROR_unexpected_release_create = Неожиданная ошибка при создании релиза
ERROR_unexpected_release_sign = Неожиданная ошибка при подписании релиза
workflow.dryrun = dryrun установлен на {}
workflow.success = JReleaser завершился успешно после {}
workflow.failure = Ошибка JReleaser после {}
workflow.included.announcers = Включенные дикторы: {}
workflow.excluded.announcers = Исключенные дикторы: {}
workflow.included.assemblers = Включенные ассемблеры: {}
workflow.excluded.assemblers = Исключенные ассемблеры: {}
workflow.included.distributions = Включенные дистрибутивы: {}
workflow.excluded.distributions = Исключенные дистрибутивы: {}
workflow.included.packagers = Включенные упаковщики: {}
workflow.excluded.packagers = Исключенные упаковщики: {}
workflow.included.uploader.types = Включенные загрузчики по типу: {}
workflow.excluded.uploader.types = Исключенные загрузчики по типу: {}
workflow.included.uploader.names = Включенные загрузчики по имени: {}
workflow.excluded.uploader.names = Исключенные загрузчики по имени: {}

ERROR_unexpected_article_announcer = Неожиданная ошибка при подготовке {}
announcer.article.resolve.templates = разрешающие шаблоны для диктора статьи
announcer.article.eval.template = шаблон оценки {}
announcer.article.write.template = шаблон записи {}
ERROR_unexpected_template_resolution = Неожиданная ошибка, разрешающая шаблоны из {}
repository.disabled = нажатие на {} отключено. Пропуск
repository.setup = настройка репозитория {}
repository.locate = поиск репозитория {}
repository.clone = клонирование {}
repository.commit.setup = настройка фиксации
repository.push = нажатие на {}
repository.commit.push = отправка фиксации на удаленный
ERROR_unexpected_repository_update = Неожиданная ошибка обновления {}
repository.copy.files = копирование файлов из {}
ERROR_repository_copy_files = Не удалось скопировать файлы из {}

artifacts.no.match = Нет подходящих артефактов. Пропуск
ERROR_unexpected_upload = Непредвиденная ошибка при загрузке {}
generic.git.warning = Выпуск в общий репозиторий Git не поддерживается
changelog.generator.resolve.commits = разрешение коммитов
changelog.generator.sort.commits = сортировка коммитов {}
changelog.generator.lookup.tag = поиск тега, соответствующего '{}'
changelog.generator.lookup.previous.tag = поиск предыдущего тега '{}'
changelog.generator.lookup.matching.tag = поиск тегов, соответствующих '{}', за исключением '{}'
changelog.generator.lookup.before.tag = поиск тега перед '{}', который соответствует '{}'
changelog.generator.tag.found = найденный тег {}
changelog.generator.generate = Создание журнала изменений: {}
changelog.generator.read = Чтение журнала изменений из {}
ERROR_changelog_not_exist = Журнал изменений {} не существует
ERROR_git_repository_remote = в репозитории нет пульта с именем '{}'
ERROR_git_repository_remote_missing_url = {} удаленный не имеет настроенного URL
ERROR_git_repository_remote_url_parse = неразборчивый удаленный URL {}
ERROR_git_repository_origin_remote = Не удалось определить удаленный 'origin'
ERROR_git_repository_list_local_branch = Не удалось перечислить локальные филиалы
ERROR_git_delete_tag = Не удалось удалить тег {}
ERROR_git_find_tag = Не удалось найти тег {}
ERROR_git_create_tag = Не удалось создать тег {}
git.tag = Добавление тегов {}
git.tag.lookup = поиск по тегу {}
git.tag.exists = tag {} существует
git.tag.release = выпуск тегов {}
ERROR_git_release_existing_tag = Выпустить не удалось, потому что тег {} уже существует. перезапись = ложь
git.tag.not.exist = tag {} не существует
git.push.release = нажатие на {}
git.push.tag = отправка тега на удаленный компьютер, dryrun = {}
git.repository.lookup = репозиторий поиска {} / {}
git.repository.create = создание репозитория {} / {}
git.milestone.lookup = этап поиска '{}' на {} / {}
git.milestone.close = заключительный этап '{}' {} / {}
git.project.create = создание проекта {} / {}
git.fetch.current.user = получение текущего пользователя
git.fetch.gitlab.project_by_id = получение проекта с идентификатором GitLab {}
git.fetch.gitlab.project.by.user = получение проекта {} для пользователя {} ({})
ERROR_project_not_exist = Проект {} не существует или не отображается
git.gitlab.project.found = found {} (ID: {})
git.fetch.release.by.tag = получение выпуска на {} / {} с тегом {}
git.fetch.release.on.tag = получение выпуска на {} с тегом {}
git.delete.tag.from = удаление тега {} из {} / {}
git.delete.tag.from.repository = удаление тега {} из {}
git.delete.release.from = удаление выпуска {} из {} / {}
git.delete.release.from.id = удаление выпуска {} из {} / {} ({})
git.create.release = создание выпуска в {} / {} с тегом {}
git.create.release.repository = создание выпуска в {} с тегом {}
git.update.release = обновление выпуска на {} / {} с тегом {}
git.upload.assets = загрузка ресурсов в {} / {}
git.upload.asset = - загрузка {}
git.upload.asset.failure = x не удалось загрузить {}
git.upload.asset.links = привязка ресурсов к {} / {} с тегом {}
git.upload.asset.link = - ссылка {}
git.upload.asset.link.failure = x не удалось связать {}
git.user.lookup = ищет пользователя для {} <{}>
ERROR_git_organization_not_exist = Организация {} не существует
ERROR_git_team_not_exist = Команда {} не существует
git.releaser.releasing = Освобождение до {}
git.releaser.release.lookup = поиск выпуска с тегом {} в репозитории {}
git.releaser.release.exists = существует выпуск {}
git.releaser.release.delete = удаление выпуска {}
git.releaser.release.create = создание выпуска {}
git.releaser.release.update = выпуск обновления {}
git.releaser.release.update.title = обновление названия выпуска до {}
git.releaser.release.update.body = обновление тела релиза
git.releaser.release.not.found = release {} не существует
git.releaser.user.not.found = Не удалось найти подходящего пользователя {}
git.releaser.repository.tag = пометка локального репозитория с помощью {}
ERROR_git_release_branch_not_exists = Нераспознанная ветка '{}'. Доступные филиалы: {}
ERROR_git_releaser_cannot_release = {} выпуск не удалось, поскольку выпуск {} уже существует. overwrite = false; update = false
git.releaser.link.discussion = связь выпуска {} с обсуждением {}
git.releaser.link.discussion.error = Не удалось обновить выпуск {} с категорией обсуждения {}
ERROR_git_discussion_duplicate = Обсуждение под названием «{}» уже было отправлено в {} / {}
webhook.connection.open = открытие соединения
webhook.connection.configure = настройка подключения
webhook.message.send = отправка сообщения
webhook.data.send = отправка данных
webhook.response.handle = обработка ответа
sdk.operation.failed = {} операция не удалась
sdkman.release.announce = объявление {} выпуска кандидата '{}'
ERROR_sdkman_announce = Не удалось объявить некоторых кандидатов
sdkman.no.suitable.artifacts = Подходящих артефактов не найдено. Пропуск
sdkman.release.announce.major = Объявление основного выпуска кандидата '{}'
sdkman.release.announce.minor = Объявление о незначительном выпуске кандидата '{}'
twitter.tweet = твиттер: {}
twitter.tweet.size = статус составляет {} символов
ERROR_unexpected_json_format = Неожиданное сообщение об ошибке форматирования как JSON
mail.message.send = Отправка объявления по электронной почте
s3.bucket.check = проверка, существует ли сегмент {}
s3.bucket.create = создание корзины {}
s3.object.check = проверка, существует ли s3: // {} / {}
s3.object.create = создание s3: // {} / {}
s3.object.write = запись s3: // {} / {}
s3.object.acl = добавление разрешения READ к s3: // {} / {}
ERROR_unexpected_s3_client_config = Ошибка при создании клиента AWS S3

disco.fetch.packages = получение пакетов с помощью {}
disco.fetch.package = получение пакета {}
disco.multiple.packages = Disco вернула {} пакетов
disco.package.not.downloadable = {} не может быть загружен напрямую
ERROR_disco_resolve_package = Disco не вернула результатов: {}
ERROR_disco_resolve_pkg = Disco не вернула результат для ephemeralId {}